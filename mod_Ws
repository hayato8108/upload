'210626
' RENAME Sub downloadFolderXml()
'folder  form    clid    group

'mod_pc config, after delete
Function pA2fA(inpt As String) As String
    pA2fA = fKey2Val("index", inpt)
End Function

Function io2plc03(inpt As String) As String
    io2plc03 = WorksheetFunction.Substitute(inpt, "X", "PLC03.X.X00")
End Function

Function io2plc00(inpt As String) As String
    io2plc00 = WorksheetFunction.Substitute(inpt, "X", "PLC00.X.X00")
End Function


Sub createNumberingXml()
Application.ScreenUpdating = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim sRet As String
Dim ws As Worksheet
On Error Resume Next

If fGetPgVal("xml_out_sht") = "" Then
    Set ws = ActiveSheet
Else
    Set ws = Sheets(fGetPgVal("xml_out_sht"))
    If ws.Name <> fGetPgVal("xml_out_sht") Then MsgBox "does not exist  : " & fGetPgVal("xml_out_sht"): Exit Sub
End If

With ws
    .Activate
    C.reloadPath
    C.createNumberingXml
'    C.reloadFixPath
'    C.createFixFilterXml
End With

MsgBox "uploadFormXml :" & fGetPgVal("xml_out_path")

Set C = Nothing
Application.ScreenUpdating = True
End Sub


Sub downloadFolderXml()
Application.ScreenUpdating = False
Dim d As clsXapDebug: Set d = New clsXapDebug
Dim f As IXMLDOMSelection
Dim sFol As String: sFol = ""
Dim sCid As String
Dim l As Long
Dim sRet As String

On Error Resume Next

If fGetPgVal("xml_out_sht") = "" Then
   Set ws = ActiveSheet
Else
    Set ws = Sheets(fGetPgVal("xml_out_sht"))
    If ws.Name <> fGetPgVal("xml_out_sht") Then MsgBox "does not exist  : " & fGetPgVal("xml_out_sht"): Exit Sub
End If
    ws.Activate

sFol = fGetPgVal("xml_dl_FolderName")
d.reloadPath
Set f = d.getFolder(sFol)
If f.Length = 0 Then MsgBox "Folder Load Error : " & sFol: Exit Sub

Call d.downloadXml(f)

If fGetPgVal("xml_nrw_Form") = "" And fGetPgVal("xml_nrw_LibName") = "" Then Exit Sub

If fGetPgVal("xml_nrw_Enabled") = 1 Then
    If fGetPgVal("xml_nrw_Form") <> "#N/A#" And fGetPgVal("xml_nrw_Form") <> "" And d.searchActiveSheetHeaderCol("LibraryComment") <> 0 Then
        Call d.delUnMatchForm(d.searchActiveSheetHeaderCol("form"), fGetPgVal("xml_nrw_Form"))
    End If
    If fGetPgVal("xml_nrw_LibName") <> "#N/A#" And fGetPgVal("xml_nrw_LibName") <> "" And d.searchActiveSheetHeaderCol("form") <> 0 Then

       Call d.delUnMatchRow(d.searchActiveSheetHeaderCol("LibraryComment"), fGetPgVal("xml_nrw_LibName"))
    End If
End If

Set d = Nothing
Set f = Nothing
Set fr = Nothing

Application.ScreenUpdating = True
End Sub


Sub downloadFixReport()
Application.ScreenUpdating = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim sRet As String

On Error Resume Next

If fGetPgVal("fix_repo_OutSht") = "" Then
    Set ws = ActiveSheet
Else
    Set ws = Sheets(fGetPgVal("fix_repo_OutSht"))
    If ws.Name <> fGetPgVal("fix_repo_OutSht") Then MsgBox "does not exist  : " & fGetPgVal("fix_repo_OutSht"): Exit Sub
End If

With ws
    .Activate
    .Cells.Clear
    .Range(Cells(1, 1), Cells(1, Columns("S").Column)).Value2 = Split("_Index,Object,Top,Left,Width,Height,LibraryComment,_Text,_TagIn,_TagInColor,_TagInVisible,_OpenPic,_Run,_Mes1,_Mes2,_Img,_Hi,_Lo,_Del", ",")
    C.reloadFixPath
    C.downloadFixReport
End With

Set C = Nothing
Application.ScreenUpdating = True
End Sub


Sub uploadFixReport()
Application.ScreenUpdating = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim sRet As String
Dim ws As Worksheet
On Error Resume Next

If fGetPgVal("fix_repo_OutSht") = "" Then
    Set ws = ActiveSheet
Else
    Set ws = Sheets(fGetPgVal("fix_repo_OutSht"))
    If ws.Name <> fGetPgVal("fix_repo_OutSht") Then MsgBox "does not exist  : " & fGetPgVal("fix_repo_OutSht"): Exit Sub
End If

With ws
    .Activate
    C.reloadFixPath
    C.createFixFilterXml
End With

MsgBox "uploaFixReport :" & fGetPgVal("fix_repo_OutPath")

Set C = Nothing
Application.ScreenUpdating = True
End Sub


Sub uploadFixReportB()
Application.ScreenUpdating = False
Application.DisplayAlerts = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim vFiles As FileDialog: Set vFiles = Application.FileDialog(msoFileDialogFilePicker)
Dim vSelectFiles As FileDialogSelectedItems
Dim vCnt As Long
Dim sRet As String
Dim wb As Workbook

With vFiles
    .Filters.Clear
'    .Filters.Add "pictureFile", "*.*", 1
    '.Title = "FILE SELECT"
    .AllowMultiSelect = True
    .InitialFileName = fGetPgVal("fix_repo_dir")
    .show
End With

On Error Resume Next
If vFiles.SelectedItems.Count = 0 Then Exit Sub: Exit Sub
Set wb = Workbooks.Add: wb.Activate

For vCnt = 1 To vFiles.SelectedItems.Count ' 1 base array
    With wb.Worksheets.Add
        .Range(Cells(1, 1), Cells(1, Columns("S").Column)).Value2 = Split("_Index,Object,Top,Left,Width,Height,LibraryComment,_Text,_TagIn,_TagInColor,_TagInVisible,_OpenPic,_Run,_Mes1,_Mes2,_Img,_Hi,_Lo,_Del", ",")
        sRet = fSetPgVal("fix_repo_InPath", vFiles.SelectedItems(vCnt))
        sRet = fSetPgVal("fix_repo_OutPath", fReplace(vFiles.SelectedItems(vCnt), ".ODR", ".xml"))
        C.reloadFixPath
        C.downloadFixReport
        .Name = fSplit(Dir(vFiles.SelectedItems(vCnt)), 1, ".")
        C.createFixFilterXml
    End With
Next vCnt
wb.Sheets("Sheet1").Delete

Set C = Nothing
Application.ScreenUpdating = True
Application.DisplayAlerts = True
End Sub


Function Alias2Cmt(inpt As String) As String
'Alias or PLC03.M.M00800 => PLC03.M.M00800
'=>PLC03_M800
'=>PLC03_KEIKI
'=>PLC03_X1
Dim sAdr As String: sAdr = inpt
Dim sFind As String
Dim sDev As String
Dim sKey As String
Dim sRslt As String
Dim sD As Long

'If UBound(Split(inpt, ".")) = 2 Then sAdr = inpt Else sAdr = fKey2Val("SRC_Alias", inpt)

sFind = fSplit(sAdr, 3, ".")
sFind = fReplaceRegx(sFind, "[A-Z]+", "")
sFind = fSplit(sFind, 1, "@")
sFind = CInt(sFind)
sDev = sFind
'MDR device

sD = IIf(sFind > 9999, 5, 4)

If sFind > 9999 Then
    sFind = Left(sFind, Len(sFind) - 2) & Application.WorksheetFunction.Rept(0, 2)
ElseIf sFind > 999 Then
    sFind = Left(sFind, Len(sFind) - 2) & Application.WorksheetFunction.Rept(0, 2)
ElseIf sFind < 1000 And sFind > 99 Then
    sFind = Left(sFind, 1) & Application.WorksheetFunction.Rept(0, Len(sFind) - 1)
Else
    sFind = 100
End If

sKey = fSplit(sAdr, 1, ".") & "_" & fSplit(sAdr, 2, ".") & sFind
sRslt = fKey2Val(sKey, fSplit(sAdr, 2, ".") & fDigitN(sDev, sD))
If Not sRslt = "#N\A#" Then Alias2Cmt = sRslt: Exit Function

'XY device
If sFind > 999 Then
    sFind = Left(sFind, Len(sFind) - 2) & Application.WorksheetFunction.Rept(0, 2)
ElseIf sFind < 1000 And sFind > 99 Then
    sFind = Left(sFind, 1) & Application.WorksheetFunction.Rept(0, Len(sFind) - 1)
Else
    sFind = 100
End If
sKey = fSplit(sAdr, 1, ".") & "_" & fSplit(sAdr, 2, ".") & sFind
sRslt = fKey2Val(sKey, fSplit(sAdr, 2, ".") & fDigitN(sDev, 3))
If Not sRslt = "#N\A#" Then Alias2Cmt = sRslt: Exit Function

'keiki
sRslt = fKey2Val(fSplit(sAdr, 1, ".") & "_Keiki", sAdr)

Alias2Cmt = sRslt

End Function






