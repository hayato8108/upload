Option Explicit
'SQL 20211018

Sub CreateDFR3DBTable()
Dim oWb As Workbook: Set oWb = ThisWorkbook
Application.ScreenUpdating = False
Call ChangeShtVisible(True, "PRE,DIFF,DB,PRG")

Debug.Print ""
Call DebugOut("ROOT", "CREATE DB START >>>" & Now())
Call DebugOut("REM", "blank cell in pre_fp_table in pv_max trend_max")

   Call ADD_FACEPLATE_MASTER
   Call ADD_FACEPLATE_CSV
   Call ADD_FIELDMASTER_TAG
    Call ADD_ALIAS
    Call ADD_OP
    Call ADD_KONDO
    Call ADD_IO
    Call ADD_TYOUGOU
    Call ADD_HIRANO
    Call ADD_ANALOG
    Call ADD_WARITUKE
    Call ADD_SERVER_CSV
    Call ADD_TREND_PENINFO
    Call ADD_ALM_MASTER
    Call ADD_C


''Call JoinLogCsv("F1,F2,F3")
''Call GetQueryResultsOnSht("SELECT " & sSelect & " FROM [TMP_LOG_CSV1$]" _
                                            , thisworkbook.path & "\" & thisworkbook.Name _
                                            , "JOIN_LOG_CSV")


Call DebugOut("ROOT", "CREATE PRE TABLE START >>>" & Now())
Call JointPreAnalogTable(Array("DB_PLC00_ANALOG", "DB_PLC03_ANALOG"))
Call updatePreAnalogTable
Call JointPreFPTable(Array("DB_FP_AI ", "DB_FP_AI_AL4", "DB_FP_AI_Q", "DB_FP_AI_SV ", "DB_FP_AI_SV2", "DB_FP_AI_SV3", "DB_FP_PID", "DB_FP_SUM"))

Call DebugOut("ROOT", "TABLE CHECK START >>>" & Now())
Call CheckServerComment
Call CheckAlarmMaster
Call CheckAnalog2ServerPrm
Call CheckAnalog2ActionPrm

'CLEAR TEMP TABLE
Call DeleteTableByPrefix("TMP")
'Call DeleteTmpTable(ThisWorkbook.Name)
Call SortSht("DB,PRG,PRE,DIFF")

Call DebugOut("ROOT", "PROC END >>>" & Now())
Debug.Print WorksheetFunction.Rept(vbNewLine, 2)

'Call ChangeShtVisible(False, "PRE,DB,PRG")
Application.ScreenUpdating = True
End Sub


Sub JointPreFPTable(inptShts As Variant)
Dim sWbName As String: sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
Dim sWsName As String
Dim sSqlQuery As String
Dim vWb As Variant
Dim v As Variant
vWb = inptShts

sWsName = "TMP_FP_TABLE"
For Each v In vWb
    Call CreatePreFPTable("[" & CStr(v) & "$]", "TMP_PRE_" & CStr(v))
Next v

sSqlQuery = ""
For Each v In vWb
    sSqlQuery = sSqlQuery & _
    RetQuerySelectFrom(" * ", "[" & "TMP_PRE_" & CStr(v) & "$]") & _
    "UNION ALL " & _
    ""
Next v

sSqlQuery = Left(sSqlQuery, Len(sSqlQuery) - 10)

Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

sSqlQuery = RetQuerySelectFrom("*", "[" & sWsName & "$]") & _
                    "WHERE [ALIAS_BASE] IS NOT NULL"

sWsName = "PRE_FP_TABLE"
Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

End Sub


Function CreatePreFPTable(inptShtName As String, inptOutSht As String) As String
Call DebugOut("SUB_ST", "CreatePreFPTable")
Dim sSqlQuery As String
Dim sWbPath As String
Dim sWbName As String
Dim sWsName As String
Dim sWbDBPath As String
Dim sShtName As String: sShtName = fReplace(fReplace(fReplace(inptShtName, "$]", ""), "[", ""), "DB_", "")
Dim sOutSht As String: sOutSht = inptOutSht
Dim sShtObjName As String: sShtObjName = inptShtName
Dim sQUERY As String
Dim sPlcR As String
Dim sPlcM As String
Dim sSelect As String
Dim vSelect(10) As Variant

    ''0 : AI, AI_AL4
    ''1 : AI_Q
    ''2 : DB_FP_AI_SV, DB_FP_AI_SV2, DB_FP_AI_SV3
    ''3 : DB_FP_PID
'
'vSelect(0) = " [FP_TYPE],[ALIAS_BASE]" & _
'                        ",[COMMENT1] & ' ' & [COMMENT2] AS [COMMENT]" & _
'                        ", [PV_MAX], [PV_MIN]" & _
'                        ", '' AS [SV_MAX], '' AS [SV_MIN]" & _
'                        ", [TREND_MAX], [TREND_MIN]" & _
'                        ", [UNITS], [DECIMAL]" & _
'                        ",'' AS [RESET]" & _
'                        ""
'vSelect(1) = "[FP_TYPE],[ALIAS_BASE],[COMMENT1] & ' ' & [COMMENT2]" & _
'                    ",[PV_MAX], [PV_MIN]" & _
'                    ", '', '' " & _
'                    ",[TREND_MAX], [TREND_MIN]" & _
'                    ", [UNITS], [DECIMAL],[RESET]"
'vSelect(2) = "[FP_TYPE],[ALIAS_BASE],[COMMENT1] & ' ' & [COMMENT2]" & _
'                    ",[PV_MAX], [PV_MIN]" & _
'                    ",[SV_MAX],[SV_MIN]" & _
'                    ", [TREND_MAX], [TREND_MIN]" & _
'                    ", [UNITS], [DECIMAL],''"
'vSelect(3) = "[FP_TYPE],[ALIAS_BASE],[COMMENT1] & ' ' & [COMMENT2]" & _
'                    ",[PV_MAX], [PV_MIN]" & _
'                    ", '', '' " & _
'                    ", [TREND_MAX], [TREND_MIN]" & _
'                    ", [UNITS], [DECIMAL],''"
'


'If sShtObjName = "[DB_FP_AI $]" Or sShtObjName = "[DB_FP_AI_AL4$]" Then
'    ''0 : AI, AI_AL4
'    sSqlQuery = _
'             RetQuerySelectFrom(CStr(vSelect(0)), sShtObjName)
'
'ElseIf sShtObjName = "[DB_FP_AI_Q$]" Then
'    ''1 : AI_Q
'    sSqlQuery = _
'             RetQuerySelectFrom(CStr(vSelect(1)), sShtObjName)
'
'ElseIf sShtObjName = "[DB_FP_AI_SV $]" Or sShtObjName = "[DB_FP_AI_SV2$]" Or sShtObjName = "[DB_FP_AI_SV3$]" Then
'    ''2 : DB_FP_AI_SV, DB_FP_AI_SV2, DB_FP_AI_SV3
'    sSqlQuery = _
'             RetQuerySelectFrom(CStr(vSelect(2)), sShtObjName)
'
'ElseIf sShtObjName = "[DB_FP_PID$]" Then
'    ''3 : DB_FP_PID
'    sSqlQuery = _
'             RetQuerySelectFrom(CStr(vSelect(3)), sShtObjName)
'Else
'    Stop
'
'End If
    
    sSelect = " [FP_TYPE],[ALIAS_BASE]" & _
                ",[COMMENT1] & ' ' & [COMMENT2] AS [COMMENT]" & _
                ", [PV_MAX], [PV_MIN]" & _
                ", [SV_MAX], [SV_MIN]" & _
                ", [TREND_MAX], [TREND_MIN]" & _
                ", [UNITS], [DECIMAL]" & _
                ",[RESET]" & _
                ""
    sWbName = RetCDirWbPath
    sWsName = sOutSht
    'Call SelectOrAddWs(sWsName, ThisWorkbook.Name)
    sSqlQuery = RetQuerySelectFrom(sSelect, sShtObjName)
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

End Function


Sub CheckAnalog2ServerPrm()
   'SERVER,ANALOG,TREND,FP
    Dim sSqlQuery As String
    Dim sWbPath As String
    Dim sWbName As String
    Dim sWsName As String
    Dim sWbDBPath As String
    Dim sSelect As String
    sSelect = " ANLG.[FULL_ADR]" & _
                   ",SHEET" & _
                   ",ALIAS" & _
                   ",ANLG.[COMMENT] AS ANLG_COMMENT" & _
                    ",SVR.[COMMENT] AS SVR_COMMENT" & _
                   ",MIN" & _
                   ",MAX" & _
                   ",ANLG.[DECIMAL] AS ANLG_DECIMAL" & _
                   ",SVR.[DEC1] AS SVR_DECIMAL" & _
                   ",ANLG.[UNITS] AS ANLG_UNITS" & _
                   ",SVR.[UNITS] AS SVR_UNITS" & _
                   ",ANLG.[BINALY] AS ANLG_BIN" & _
                   ",SVR.[BINALY] AS SVR_BIN" & _
                   ",SVR.[CSV3]"
                   
    sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
    
    'JOIN WITH SERVER
    sSqlQuery = ""
    sSqlQuery = sSqlQuery & _
        RetQuerySelectFrom(sSelect, "[PRE_ANALOG_TABLE$] AS ANLG") & _
        "LEFT OUTER JOIN [DB_SERVER_CSV$] AS SVR ON ANLG.[FULL_ADR] = SVR.[FULL_ADR] " & _
    ""
    sWsName = "DIFF_ANGL&SVR" ' ======================================
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

End Sub


Sub CheckAnalog2ActionPrm()
    'SERVER,ANALOG,TREND,FP
    Dim sSqlQuery As String
    Dim sWbPath As String
    Dim sWbName As String
    Dim sWsName As String
    Dim sWbDBPath As String
    Dim sSelect As String
    Dim vSelect(10) As Variant
    'server
    vSelect(0) = "'SERVER_CSV' AS [SHEET],SVR.[FULL_ADR] AS [FULL_ADR],SVR.[COMMENT] AS [COMMENT],SVR.[UNITS] AS [UNITS], SVR.[DECIMAL] AS [DECIMAL], SVR.[BINALY] AS BINALY  " & _
                    ",[NO],ANLG.[SHEET] AS [ANLG_SHEET],ANLG.[ALIAS_BASE] AS [ANLG_ALIAS],ANLG.[COMMENT] AS [ANLG_COMMENT],ANLG.[UNITS] AS [ANALOG_UNITS], ANLG.[DECIMAL] AS [ANALOG_DECIMAL], ANLG.[BINALY] AS ANALOG_BINALY  ,ANLG.[FP_TYPE] AS ANALOG_FPTYPE" & _
                    ""
   'Fieldmaster
    vSelect(1) = "'FIELD_MASTER' AS [SHEET],[ALIAS],[COMMENT],[DECIMAL]"
    vSelect(2) = "'FIELD_MASTER',PRE.[ALIAS],PRE.[COMMENT],PRE.[DECIMAL]" & _
    ",[NO],ANLG.[SHEET] AS [ANLG_SHEET],ANLG.[ALIAS] AS [ANLG_ALIAS],ANLG.[COMMENT] AS [ANLG_COMMENT],ANLG.[UNITS] AS [ANALOG_UNITS], ANLG.[DECIMAL] AS [ANALOG_DECIMAL], ANLG.[BINALY] AS ANALOG_BINALY  ,ANLG.[FP_TYPE] AS ANALOG_FPTYPE"
    'Peninfo
    vSelect(3) = "'PENINFO' AS [SHEET],PINFO.[ALIAS],PINFO.[COMMENT],PINFO.[UNITS],PINFO.[DECIMAL]" & _
        ",[NO],ANLG.[SHEET] AS [ANLG_SHEET],ANLG.[ALIAS_BASE] AS [ANLG_ALIAS],ANLG.[COMMENT] AS [ANLG_COMMENT],ANLG.[UNITS] AS [ANALOG_UNITS], ANLG.[DECIMAL] AS [ANALOG_DECIMAL], ANLG.[BINALY] AS ANALOG_BINALY  ,ANLG.[FP_TYPE] AS ANALOG_FPTYPE"
    'Faceplate
    vSelect(4) = "'FACEPLATE' AS [SHEET]" & _
                        ",ANLG.[SHEET] AS [ANLG_SHEET]" & _
                        ",ANLG.[NO]" & _
                        ",FP.[ALIAS_BASE]" & _
                        ",ANLG.[ALIAS_BASE] AS [ANLG_ALIAS]" & _
                        ",FP.[COMMENT]" & _
                        ",ANLG.[COMMENT] AS [ANLG_COMMENT]" & _
                        ",FP.[PV_MAX] AS FP_PV_MAX" & _
                        ",FP.[SV_MAX] AS FP_SV_MAX" & _
                        ",FP.[TREND_MAX] AS FP_TREND_MAX" & _
                        ",ANLG.[MAX] AS ANLG_MAX" & _
                        ",FP.[PV_MIN] AS FP_PV_MIN" & _
                        ",FP.[SV_MIN] AS FP_SV_MIN" & _
                        ",FP.[TREND_MIN] AS FP_TREND_MIN" & _
                        ",ANLG.[MIN] AS ANLG_MIN" & _
                        ",FP.[UNITS]" & _
                        ",ANLG.[UNITS] AS [ANALOG_UNITS]" & _
                        ",FP.[DECIMAL]" & _
                        ", ANLG.[DECIMAL] AS [ANALOG_DECIMAL]" & _
                        ", FP.[FP_TYPE] AS FP_FPTYPE " & _
                        ",ANLG.[FP_TYPE] AS ANALOG_FPTYPE" & _
                        " WHERE ANLG.[TYPE] = 'PV'" & _
                        ""
                        
    sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name

    '(FULL_ADR) => SERVER
    sSelect = CStr(vSelect(0))
    sSqlQuery = sSqlQuery & _
        RetQuerySelectFrom(sSelect, "[DB_SERVER_CSV$] AS SVR") & _
        "RIGHT OUTER JOIN [PRE_ANALOG_TABLE$] AS ANLG ON ANLG.[FULL_ADR] = SVR.[FULL_ADR]" & _
        "WHERE SVR.[UNITS] IS NOT NULL  OR SVR.[DECIMAL] IS NOT NULL " & _
        "ORDER BY ANLG.[SHEET], [NO], SVR.[FULL_ADR] ASC " & _
        ""
    sWsName = "DIFF_ANGL&SERVER" ' ======================================
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    sSqlQuery = ""

    '(ALIAS) => Fieldmaster
    sSelect = CStr(vSelect(1))
    sSqlQuery = sSqlQuery & _
            RetQuerySelectFrom(sSelect, "[DB_FIELDMASTER_TAG_PRT$]") & _
        "UNION ALL " & _
            RetQuerySelectFrom(sSelect, "[DB_FIELDMASTER_TAG_SV$]") & _
        "UNION ALL " & _
            RetQuerySelectFrom(sSelect, "[DB_FIELDMASTER_TAG_PV$]") & _
        "UNION ALL " & _
            RetQuerySelectFrom(sSelect, "[DB_FIELDMASTER_TAG $]") & _
        ""
    
    sWsName = "TMP_pre_JOIN_WITH_ALIAS" ' ======================================
     Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    sSqlQuery = ""

    sSelect = CStr(vSelect(2))
    sSqlQuery = sSqlQuery & _
        RetQuerySelectFrom(sSelect, "[" & sWsName & "$] AS PRE") & _
        "RIGHT OUTER JOIN [PRE_ANALOG_TABLE$] AS ANLG ON ANLG.[ALIAS] = PRE.[ALIAS]" & _
        "WHERE PRE.[ALIAS] IS NOT NULL " & _
        "ORDER BY ANLG.[SHEET], [NO] ASC " & _
        ""

    sWsName = "DIFF_ANLG&FIELDMASTER" ' ======================================
     Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    sSqlQuery = ""

    '(ALIAS) => TREND
    sSelect = CStr(vSelect(3))
    sSqlQuery = sSqlQuery & _
             RetQuerySelectFrom(sSelect, "[DB_TREND_PENINFO $] AS PINFO") & _
                     "RIGHT OUTER JOIN [PRE_ANALOG_TABLE$] AS ANLG ON ANLG.[ALIAS_BASE] = PINFO.[ALIAS]" & _
        ""
        
    sWsName = "DIFF_ANLG&PENINFO" ' ======================================
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    sSqlQuery = ""

   sSelect = "'FACEPLATE' AS [SHEET],FP.[ALIAS_BASE],FP.[COMMENT],FP.[PV_MAX],FP.[PV_MIN],FP.[TREND_MAX],FP.[TREND_MIN],FP.[SV_MAX],FP.[SV_MIN],FP.[UNITS],FP.[DECIMAL], FP.[FP_TYPE] AS FP_FPTYPE " & _
                    ",[NO],ANLG.[SHEET] AS [ANLG_SHEET],ANLG.[ALIAS_BASE] AS [ANLG_ALIAS],ANLG.[COMMENT] AS [ANLG_COMMENT],ANLG.[MAX] AS [ANALOG_MAX],ANLG.[MIN] AS [ANALOG_MIN],ANLG.[UNITS] AS [ANALOG_UNITS], ANLG.[DECIMAL] AS [ANALOG_DECIMAL], ANLG.[BINALY] AS ANALOG_BINALY ,ANLG.[FP_TYPE] AS ANALOG_FPTYPE,ANLG.[TYPE]" & _
                    ""
    sSqlQuery = sSqlQuery & _
             RetQuerySelectFrom(sSelect, "[PRE_FP_TABLE$] AS FP ") & _
                     "RIGHT OUTER JOIN [PRE_ANALOG_TABLE$] AS ANLG ON ANLG.[ALIAS_BASE] = FP.[ALIAS_BASE]" & _
                     "WHERE ANLG.[TYPE] = 'PV' " & _
                     ""

    sWsName = "DIFF_ANLG&FACEPLATE" ' ======================================
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

End Sub


Sub updatePreAnalogTable()

End Sub


Sub JointPreAnalogTable(inptShts As Variant)
Dim sWbName As String: sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
Dim sWsName As String
Dim sSqlQuery As String
Dim vWb As Variant
Dim v As Variant
vWb = inptShts

For Each v In vWb
    Call CreatePreAnalogTable("[" & CStr(v) & "$]", "TMP_PRE_ANLG_" & CStr(v))
Next v

sSqlQuery = ""
For Each v In vWb
    sSqlQuery = sSqlQuery & _
    RetQuerySelectFrom(" * ", "[" & "TMP_PRE_ANLG_" & CStr(v) & "$] AS ANLG") & _
    "UNION ALL " & _
    ""
Next v

sSqlQuery = Left(sSqlQuery, Len(sSqlQuery) - 10)
sWsName = "PRE_ANALOG_TABLE"
Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

End Sub


Function CreatePreAnalogTable(inptShtName As String, inptOutSht As String) As String
Dim sSqlQuery As String
Dim sWbPath As String
Dim sWbName As String
Dim sWsName As String
Dim sWbDBPath As String

Dim sShtName As String: sShtName = fReplace(fReplace(fReplace(inptShtName, "$]", ""), "[", ""), "DB_", "")
Dim sOutSht As String: sOutSht = inptOutSht
Dim sShtObjName As String: sShtObjName = inptShtName
Dim sField As String
Dim sType As String

sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name

    sField = "[PV_DEVICE]"
    sType = "PV"
    sSqlQuery = _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[SV_DEVICE]"
    sType = "SV"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MV_DEVICE]"
    sType = "MV"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[SH_DEVICE]"
    sType = "SH"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[SL_DEVICE]"
    sType = "SL"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MV1_DEVICE]"
    sType = "MV1"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MV2_DEVICE]"
    sType = "MV2"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[DB_DEVICE]"
    sType = "DB"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MH_DEVICE]"
    sType = "MH"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[ML_DEVICE]"
    sType = "ML"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

'    'ALARM DEV
    sField = "[HH_DEVICE]"
    sType = "HH"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[H_DEVICE]"
    sType = "H"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[L_DEVICE]"
    sType = "L"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[LL_DEVICE]"
    sType = "LL"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    'HYS
    sField = "[HYS_DEVICE]"
    sType = "HYS"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[CAL_DEVICE]"
    sType = "CAL"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[CAL_M_DEVICE]"
    sType = "CAL_M"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[RAW_DEVICE]"
    sType = "RAW"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

      'PID
    sField = "[P_DEVICE]"
    sType = "P"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[I_DEVICE]"
    sType = "I"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
             RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[D_DEVICE]"
    sType = "D"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MODE_DEVICE]"
    sType = "MODE"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "R", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sWsName = "TMP_PRE_ANALOG_R"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    sSqlQuery = ""

 'PLC ALARM DEV
    sField = "[PLC_HH_DEVICE]"
    sType = "PLC_HH"
    sSqlQuery = sSqlQuery & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[PLC_H_DEVICE]"
    sType = "PLC_H"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[PLC_L_DEVICE]"
    sType = "PLC_L"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[PLC_LL_DEVICE]"
    sType = "PLC_LL"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[PLC_CAL_M_DEVICE]"
    sType = "PLC_CAL_M"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

   'SCADA ALARM DEV
    sField = "[AL_HH_DEVICE]"
    sType = "AL_HH"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_H_DEVICE]"
    sType = "AL_H"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_L_DEVICE]"
    sType = "AL_L"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_LL_DEVICE]"
    sType = "AL_LL"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_CAL_M_DEVICE]"
    sType = "AL_CAL_M"
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
                          RetQuerySelectFrom(RetQueryPreAnalog(sShtName, "M", sField, sType), sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sWsName = "TMP_PRE_ANALOG_M"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

    sSqlQuery = ""
    
    sSqlQuery = sSqlQuery & _
                          RetQuerySelectFrom("*", "[TMP_PRE_ANALOG_R$]") & _
                    "UNION ALL " & _
                          RetQuerySelectFrom("*", "[TMP_PRE_ANALOG_M$]") & _
                    ""
                    
    sWsName = sOutSht
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

End Function



Function RetQueryPreAnalog(inptSht As String, inptLetter As String, inptField As String, inptType As String) As String
Call DebugOut("UTIL", "RetQueryPreAnalog" & inptSht & inptLetter & inptField & inptType)
Dim sSht As String: sSht = inptSht
Dim sLetter As String: sLetter = inptLetter
Dim sField As String: sField = inptField
Dim sType As String: sType = inptType
Dim sSelect As String
Dim vSelect(20) As Variant
      
'    sSqlQuery = " SELECT" & _
'                          "   [NO] AS [NO]" & _
'                          ", 'PLC00.R.' & [PV_DEVICE] AS [FULL_ADR]" & _
'                          ", 'PLC00_ANALOG' AS [SHEET]" & _
'                          ",  [ALIAS_BASE]   AS [ALIAS_BASE]" & _
'                          ",  [ALIAS_BASE]  & '_PV' AS [ALIAS]" & _
'                          ",  'PV' AS [TYPE]" & _
'                          ",  [COMMENT] & '_PV' AS [COMMENT]" & _
'                          ",  [PV_MIN] , [PV_MAX], [SV_MIN] , [SV_MAX] , [UNITS], [DECIMAL], [FP_TYPE]" & _
'                          ",  IIF([WORD_SIZE]='', '', IIF([WORD_SIZE]='1W',  'BIN-16',  'BIN-32')) AS [BINALY]" & _
'                  " FROM [DB_PLC00_ANALOG$] WHERE [ALIAS_BASE] IS NOT NULL AND [PV_DEVICE] IS NOT NULL  "
'
'1 : 'PV , RAW, sH, sL, P, CAL, d, Db, H, HH, HYS, i, l, LL
' NORMAL
    vSelect(0) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", [PV_MIN] ,[PV_MAX], '' AS [SV_MIN] ,'' AS [SV_MAX] ,[UNITS],[DECIMAL],[FP_TYPE]" & _
                        ", IIF([WORD_SIZE]='','',IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) AS [BINALY] "
'2 : SV
'xRANGE
    vSelect(1) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", [PV_MIN] ,[PV_MAX], [SV_MIN] ,[SV_MAX] ,[UNITS],[DECIMAL],[FP_TYPE]" & _
                        ", IIF([WORD_SIZE]='','',IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) AS [BINALY] "
'3 : MH  ML  MV  MV1 MV2
'0.0 100.0 %
    vSelect(2) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", '0.0', '100.0', '', '', '%','1',[FP_TYPE]" & _
                        ", 'BIN-16' AS [BINALY] "
'4 : (BIT) AL_CAL    AL_H    AL_HH   AL_L    AL_LL
'BIT o ALIAS oCOMMENT (SCADAL)
    vSelect(3) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", '0', '0', '', '', '', '0',[FP_TYPE]" & _
                        ", 'BIT' AS [BINALY] "
'5 : (BIT) PLC_CAL_M , PLC_H, PLC_HH, PLC_L, PLC_LL
'BIT x ALIAS oCOMMENT (PLC)
    vSelect(4) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", '0', '0', '', '', '', '0',[FP_TYPE]" & _
                        ", 'BIT' AS [BINALY] "
'6 : MODE
'ALIAS => MODE, COMMENT => A/M
    vSelect(5) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_A/M" & "' AS [COMMENT]" & _
                        ", '0', '0', '', '', '', '0',[FP_TYPE]" & _
                        ", IIF([WORD_SIZE]='','',IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) AS [BINALY] "
'7 : P (DEC 0)
    vSelect(6) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", '', '', '' , '' , '','0',[FP_TYPE]" & _
                        ", 'BIN-16' AS [BINALY] "
'8 : I (DEC 1)
    vSelect(7) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", '' , '' , '', '', '','1',[FP_TYPE]" & _
                        ", 'BIN-16' AS [BINALY] "
'9 : D (DEC 2)
    vSelect(8) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", '' , '' , '', '', '','2',[FP_TYPE]" & _
                        ", 'BIN-16' AS [BINALY] "
'10 : CAL_M
    vSelect(9) = "[NO] AS [NO],'" & fSplit(sSht, 1, "_") & "." & sLetter & "." & "' & " & sField & " AS [FULL_ADR]" & _
                        ",'" & sSht & "' AS [SHEET]" & _
                        ", [ALIAS_BASE]   AS [ALIAS_BASE]" & _
                        ", [ALIAS_BASE]  & '_" & sType & "' AS [ALIAS]" & _
                        ", '" & sType & "' AS [TYPE]" & _
                        ", [COMMENT] & '_" & sType & "' AS [COMMENT]" & _
                        ", '0', '0', '', '', '', '0',[FP_TYPE]" & _
                        ", 'BIN-16' AS [BINALY]  "


'1 : 'PV , RAW, sH, sL, P, CAL, d, Db, H, HH, HYS, i, l, LL,DB
'2 : SV
'3 : MH  ML  MV  MV1 MV2
'4 : (BIT) AL_CAL    AL_H    AL_HH   AL_L    AL_LL, CAL_M
'5 : (BIT) PLC_CAL_M , PLC_H, PLC_HH, PLC_L, PLC_LL
'6 : MODE
'7 : P (DEC 0)
'8 : I (DEC 1)
'9 : D (DEC 2)


   If WorksheetFunction.Or(sType = "PV", sType = "RAW", sType = "SH", sType = "SL", sType = "CAL", sType = "DB", sType = "H", sType = "HH", sType = "HYS", sType = "L", sType = "LL") Then
        sSelect = vSelect(0)
    ElseIf sType = "SV" Then
        sSelect = vSelect(1)
    ElseIf WorksheetFunction.Or(sType = "MH", sType = "ML", sType = "MV", sType = "MV1", sType = "MV2") Then
        sSelect = vSelect(2)
    ElseIf WorksheetFunction.Or(sType = "AL_CAL_M", sType = "AL_H", sType = "AL_HH", sType = "AL_L", sType = "AL_LL") Then
        sSelect = vSelect(3)
    ElseIf WorksheetFunction.Or(sType = "PLC_CAL_M", sType = "PLC_H", sType = "PLC_HH", sType = "PLC_L", sType = "PLC_LL") Then
        sSelect = vSelect(4)
    ElseIf sType = "MODE" Then
        sSelect = vSelect(5)
    ElseIf sType = "P" Then
          sSelect = vSelect(6)
    ElseIf sType = "I" Then
            sSelect = vSelect(7)
    ElseIf sType = "D" Then
            sSelect = vSelect(8)
    ElseIf sType = "CAL_M" Then
            sSelect = vSelect(9)
    Else
            Stop
    End If

    RetQueryPreAnalog = sSelect

End Function



Function RetQueryServerDev0() As String
Call DebugOut("UTIL", "RetQueryServerDev0")
Dim sSqlQuery As String

    sSqlQuery = _
            RetQuerySelectFrom(" REPLACE('PLC03.R.' & [DEVICE], 'R.R', 'R.R0') AS [FULL_ADR] " & _
                                             ",'PLC03_R' AS [SHEET] " & _
                                             ", '' AS [ALIAS] " & _
                                             ",         [COMMENT] " & _
                                             ", '' AS [UNITS] " & _
                                             ", '' AS [DECIMAL] " & _
                                             ", '' AS [BINALY] ", " [DB_PLC03_R$]") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.M.' & [DEVICE], 'M.M', 'M.M0') AS [FULL_ADR] " & ",'PLC03_M','', [COMMENT],'','',''", "[DB_PLC03_M$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.R.' & [DEVICE], 'R.R', 'R.R0') AS [FULL_ADR] " & ",'PLC03_R', '', [COMMENT],'','',''", "[DB_PLC03_R$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.M.' & [DEVICE], 'M.M', 'M.M0') AS [FULL_ADR] " & ",'PLC00_M', '', [COMMENT],'','',''", "[DB_PLC00_M$] WHERE [DEVICE] IS NOT NULL") & _
      "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.R.' & [DEVICE], 'R.R', 'R.R0') AS [FULL_ADR] " & ",'PLC00_R', '', [COMMENT],'','',''", "[DB_PLC00_R$] WHERE [DEVICE] IS NOT NULL") & _
        ""
        
    sSqlQuery = sSqlQuery & _
      "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0') AS [FULL_ADR] " & ",'PLC03_B', '', [COMMENT],'','',''", "[DB_CCL03_B$] WHERE [DEVICE] IS NOT NULL") & _
      "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.W.' & [DEVICE], 'W.W', 'W.W0') AS [FULL_ADR] " & ",'PLC03_W', '', [COMMENT],'','',''", "[DB_CCL03_W$] WHERE [DEVICE] IS NOT NULL") & _
            " "

    sSqlQuery = sSqlQuery & _
         "UNION ALL " & _
                 RetQuerySelectFrom("REPLACE('PLC03.W.' & [DEVICE], 'W.W', 'W.W0'),'HIRANO_SV_W', '',[COMMENT],'','','' ", "[DB_HIRANO_SV_W$] WHERE [DEVICE] IS NOT NULL") & _
         "UNION ALL " & _
                 RetQuerySelectFrom("REPLACE('PLC03.W.' & [DEVICE], 'W.W', 'W.W0'),'HIRANO_PV_W', '',[COMMENT],'','','' ", "[DB_HIRANO_PV_W$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
                 RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0'),'HIRANO_DO_B', '',[COMMENT],'','','' ", "[DB_HIRANO_DO_B$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
                 RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0'),'HIRANO_DI_B', '',[COMMENT],'','','' ", "[DB_HIRANO_DI_B$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.W.' & [DEVICE], 'W.W', 'W.W0'),'HIRANO_ALM_W', '',[COMMENT],'','','' ", "[DB_HIRANO_ALM_W$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0') ,'KONDO_A2K_W', '', [COMMENT],'','',''", "[DB_KONDO_A2K_W$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0') ,'KONDO_K2A_W', '', [COMMENT],'','',''", "[DB_KONDO_K2A_W$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0') ,'KONDO_A2K_B', '', [COMMENT],'','',''", "[DB_KONDO_A2K_B$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0') ,'KONDO_K2A_B', '', [COMMENT],'','',''", "[DB_KONDO_K2A_B$] WHERE [DEVICE] IS NOT NULL") & _
        ""
        
    sSqlQuery = sSqlQuery & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.X.' & [DEVICE], 'X.X', 'X.X00') ,'OP00_X', '' , [COMMENT1] & ' ' & [COMMENT2] AS [COMMENT],'','',''", "[DB_OP00_X$] WHERE [DEVICE] IS NOT NULL") & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.Y.' & [DEVICE], 'Y.Y', 'Y.Y00') ,'OP00_Y', '' , [COMMENT1] & ' ' & [COMMENT2] AS [COMMENT],'','',''", "[DB_OP00_Y$] WHERE [DEVICE] IS NOT NULL") & _
            " "
            
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.X.' & [DEVICE], 'X.X', 'X.X00') ,'DB_PLC00_X', '' ,[COMMENT1] & ' ' & [COMMENT2] & ' ' & [COMMENT3] AS [COMMENT],'','',''", "[DB_PLC00_X$] AS PLC00_X") & _
            "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.X.' & [DEVICE], 'X.X', 'X.X00') ,'DB_PLC03_X', '' , [COMMENT1] & ' ' & [COMMENT2] & ' ' & [COMMENT3] AS [COMMENT],'','',''", "[DB_PLC03_X$] AS PLC03_X") & _
            "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.Y.' & [DEVICE], 'Y.Y', 'Y.Y00') ,'DB_PLC00_Y', '' ,[COMMENT1] & ' ' & [COMMENT2] & ' ' & [COMMENT3] AS [COMMENT],'','',''", "[DB_PLC00_Y$] AS PLC00_Y") & _
            "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.Y.' & [DEVICE], 'Y.Y', 'Y.Y00') ,'DB_PLC03_Y', '' , [COMMENT1] & ' ' & [COMMENT2] & ' ' & [COMMENT3] AS [COMMENT],'','',''", "[DB_PLC03_Y$] AS PLC03_Y") & _
            " "
    RetQueryServerDev0 = sSqlQuery

End Function



Function RetQueryServerDevAnalog(inptShtName As String) As String
Call DebugOut("UTIL", "RetQueryServerDevAnalog" & inptShtName)
Dim sShtName As String: sShtName = fReplace(fReplace(fReplace(inptShtName, "$]", ""), "[", ""), "DB_", "")
Dim sShtObjName As String: sShtObjName = inptShtName
Dim sQUERY As String
Dim sPlcR As String
Dim sPlcM As String
Dim sField As String
Dim sType As String
sPlcR = fSplit(sShtName, 1, "_") & ".R."
sPlcM = fSplit(sShtName, 1, "_") & ".M."

    'PV
    sField = "[PV_DEVICE]"
    sType = "PV"
    sQUERY = _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[SV_DEVICE]"
    sType = "SV"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MV_DEVICE]"
    sType = "MV"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[SH_DEVICE]"
    sType = "SH"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[SL_DEVICE]"
    sType = "SL"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MV1_DEVICE]"
    sType = "MV1"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MV2_DEVICE]"
    sType = "MV2"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[DB_DEVICE]"
    sType = "DB"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MH_DEVICE]"
    sType = "MH"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[ML_DEVICE]"
    sType = "ML"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

'    'ALARM DEV
    sField = "[HH_DEVICE]"
    sType = "HH"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[H_DEVICE]"
    sType = "H"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[L_DEVICE]"
    sType = "L"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[LL_DEVICE]"
    sType = "LL"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    'HYS
    sField = "[HYS_DEVICE]"
    sType = "HYS"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[CAL_DEVICE]"
    sType = "CAL"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[CAL_M_DEVICE]"
    sType = "CAL_M"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[RAW_DEVICE]"
    sType = "RAW"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

      'PID
    sField = "[P_DEVICE]"
    sType = "P"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[I_DEVICE]"
    sType = "I"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[D_DEVICE]"
    sType = "D"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[MODE_DEVICE]"
    sType = "MODE"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcR & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    RetQueryServerDevAnalog = sQUERY
            
End Function


Function RetQueryServerDev2(inptShtName As String) As String
Call DebugOut("UTIL", "RetQueryServerDev2")
Dim sShtName As String: sShtName = fReplace(fReplace(fReplace(inptShtName, "$]", ""), "[", ""), "DB_", "")
Dim sShtObjName As String: sShtObjName = inptShtName
Dim sQUERY As String
Dim sPlcR As String
Dim sPlcM As String
Dim sField As String
Dim sType As String
sPlcR = fSplit(sShtName, 1, "_") & ".R."
sPlcM = fSplit(sShtName, 1, "_") & ".M."
    
 'PLC ALARM DEV
    sField = "[PLC_HH_DEVICE]"
    sType = "PLC_HH"
    sQUERY = ""
    sQUERY = sQUERY & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")
    
    sField = "[PLC_H_DEVICE]"
    sType = "PLC_H"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[PLC_L_DEVICE]"
    sType = "PLC_L"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[PLC_LL_DEVICE]"
    sType = "PLC_LL"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[PLC_CAL_M_DEVICE]"
    sType = "PLC_CAL_M"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

   'SCADA ALARM DEV
    sField = "[AL_HH_DEVICE]"
    sType = "AL_HH"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_H_DEVICE]"
    sType = "AL_H"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_L_DEVICE]"
    sType = "AL_L"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_LL_DEVICE]"
    sType = "AL_LL"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    sField = "[AL_CAL_M_DEVICE]"
    sType = "AL_CAL_M"
    sQUERY = sQUERY & _
            "UNION ALL " & _
             RetQuerySelectFrom("'" & sPlcM & "' & " & sField & ", '" & sShtName & "', [ALIAS_BASE] & '_" & sType & "' AS [ALIAS], [COMMENT] & '_" & sType & "', [UNITS], [DECIMAL], IIF([WORD_SIZE]="","",IIF([WORD_SIZE]='1W', 'BIN-16', 'BIN-32')) ", sShtObjName & " WHERE [ALIAS_BASE] IS NOT NULL AND " & sField & " IS NOT NULL ")

    RetQueryServerDev2 = sQUERY
   Stop
End Function

Sub CheckServerComment()
Call DebugOut("SUB_ST", "CheckServerComment")
    'SERVER <=> LIST
    'ALIAS, COMMENT, UNITS, DECIMAL, BINALY
    Dim sSqlQuery As String
    Dim sWbPath As String
    Dim sWbName As String
    Dim sWsName As String
    Dim sWbDBPath As String
    
    'LIST_TABLE=======================================================
    sWsName = "TMP_LST_TABLE"
    sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name

    sSqlQuery = RetQueryServerDev0() & _
                    ""
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

    sSqlQuery = _
        RetQuerySelectFrom(" * ", "[" & sWsName & "$]") & _
    " UNION ALL " & _
        RetQuerySelectFrom(" [FULL_ADR],[SHEET],[ALIAS],[COMMENT],[UNITS],[DECIMAL],[BINALY] ", "[PRE_ANALOG_TABLE$] AS ANLG") & _
    " WHERE ANLG.[TYPE] = '_HH' OR ANLG.[TYPE] = '_H' OR ANLG.[TYPE] = '_L' OR ANLG.[TYPE] = '_LL'" & _
    ""
    
    sWsName = "TMP_JOIN_LIST&ANLG_TABLE"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

    'FULL LIST
     sSqlQuery = _
        RetQuerySelectFrom("LST.[FULL_ADR] AS LST_FULLADR" & _
                                         ", SVR.[FULL_ADR] AS SVR_FULLADR" & _
                                         ", LST.[ALIAS] AS LST_ALIAS" & _
                                         ", LST.[SHEET] AS LST_SHEET" & _
                                         ", LST.[COMMENT] AS LST_COMMENT" & _
                                         ", SVR.[COMMENT] AS SVR_COMMENT" _
                                         , "[" & sWsName & "$] AS LST") & _
        "LEFT OUTER JOIN [DB_SERVER_CSV$] AS SVR ON SVR.[FULL_ADR] = LST.[FULL_ADR] " & _
        ""
        
    sWsName = "TMP_JOIN_LIST&ANLG&SVR_TABLE"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

    
    'SVR COMMENT VERIFY
    sSqlQuery = _
    RetQuerySelectFrom(" SVR.[CSV1]" & _
                                    ",SVR.[CSV2]" & _
                                    ",SVR.[CSV3]" & _
                                    ",SVR.[FULL_ADR]" & _
                                    ",DIFF.[LST_SHEET]" & _
                                    ",DIFF.[LST_COMMENT]" _
                                    , "[DB_SERVER_CSV$] AS SVR ") & _
    "RIGHT OUTER JOIN [" & sWsName & "$] AS DIFF ON DIFF.[LST_FULLADR] = SVR.[FULL_ADR] " & _
    ""
    
    sWsName = "DIFF_COMMENT_CHECK"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    

End Sub


Sub CheckAlarmMaster()
Call DebugOut("SUB_ST", "CheckAlarmMaster")
    Dim sSqlQuery As String
    Dim sWbPath As String
    Dim sWbName As String
    Dim sWsName As String
    Dim sWbDBPath As String
    
    sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
    Dim sWhere1 As String: sWhere1 = "WHERE [CATEGORY] LIKE '%ALM%' OR  [CATEGORY] LIKE '%OPE%' "

    sSqlQuery = _
            RetQuerySelectFrom("REPLACE('PLC03.R.' & [DEVICE], 'R.R', 'R.R0') AS [FULL_ADR] " & ",'PLC03_R' AS SHEET,[COMMENT],[CATEGORY] ", "[DB_PLC03_R$]") & sWhere1 & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.M.' & [DEVICE], 'M.M', 'M.M0') AS [FULL_ADR] " & ",'PLC03_M',[COMMENT],[CATEGORY] ", "[DB_PLC03_M$]") & sWhere1 & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.R.' & [DEVICE], 'R.R', 'R.R0') AS [FULL_ADR] " & ",'PLC00_R',[COMMENT],[CATEGORY] ", "[DB_PLC00_R$]") & sWhere1 & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.M.' & [DEVICE], 'M.M', 'M.M0') AS [FULL_ADR] " & ",'PLC00_M',[COMMENT],[CATEGORY] ", "[DB_PLC00_M$]") & sWhere1 & _
            " "
    sSqlQuery = sSqlQuery & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.W.' & REPLACE([DEVICE], '.', '@'), 'W.W', 'W.W0') ,'HIRANO_W',[COMMENT],'ALM'", "[DB_HIRANO_ALM_W$]") & "WHERE COMMENT IS NOT NULL " & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.B.' & [DEVICE], 'B.B', 'B.B0') ,'KONDO_B',[COMMENT],[CATEGORY]", "[DB_KONDO_K2A_B$]") & "WHERE [CATEGORY] = 'ALM' " & _
        "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.X.' & [DEVICE], 'X.X', 'X.X00') ,'OP_X',[COMMENT1] & ' ' & [COMMENT2] AS [COMMENT] ,[CATEGORY]", "[DB_OP00_X$]") & "WHERE [CATEGORY] = 'ALM' " & _
            " "
    sSqlQuery = sSqlQuery & _
            "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC00.X.' & [DEVICE], 'X.X', 'X.X00') ,'DB_PLC00_X',[COMMENT1] & ' ' & [COMMENT2] & ' ' & [COMMENT3] AS [COMMENT],[CATEGORY]", "[DB_PLC00_X$] AS PLC00_X") & "WHERE [CATEGORY] LIKE '%ALM%' " & _
            "UNION ALL " & _
            RetQuerySelectFrom("REPLACE('PLC03.X.' & [DEVICE], 'X.X', 'X.X00') ,'DB_PLC03_X',[COMMENT1] & ' ' & [COMMENT2] & ' ' & [COMMENT3] AS [COMMENT],[CATEGORY]", "[DB_PLC03_X$] AS PLC03_X") & "WHERE [CATEGORY] LIKE '%ALM%' " & _
            " "

    sSqlQuery = sSqlQuery & _
        "UNION ALL " & _
            RetQuerySelectFrom("[FULL_ADR],[SHEET],[COMMENT] ,[TYPE]", "[PRE_ANALOG_TABLE$] AS ANLG") & "WHERE [TYPE] LIKE 'AL_%' " & _
            " "
            
    sWsName = "TMP_TABLE1"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    sSqlQuery = ""

    sSqlQuery = " SELECT" & _
                            " LST.[FULL_ADR] AS [LST_FULLADR]" & _
                            ",MST.[FULL_ADR] AS [MST_FULLADR]" & _
                            ",LST.[SHEET]" & _
                            ",LST.[COMMENT]" & _
                            ",MST.[COMMENT]" & _
                            ",[ALIAS] AS [MST_ALIAS_NOTE]" & _
                            ",LST.[CATEGORY]" & _
                            ",MST.[CATEGORY]" & _
                        " FROM" & _
                            " [" & sWsName & "$] AS LST" & _
                            ""
   sSqlQuery = _
                        sSqlQuery & _
                        " LEFT OUTER JOIN [DB_ALM_MASTER$] AS MST ON LST.[FULL_ADR] = MST.[FULL_ADR]" & _
                    " UNION ALL " & _
                        sSqlQuery & _
                        " RIGHT OUTER JOIN [DB_ALM_MASTER$] AS MST ON LST.[FULL_ADR] = MST.[FULL_ADR]" & _
                        " WHERE LST.[COMMENT] IS NULL" & _
                        " "
                        
    sWsName = "TMP_FULLJOIN_LST&MST"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    sSqlQuery = ""
    
    Call SelectOrAddWs("PRG_ALM_DELETE", ThisWorkbook.Name)
    If Not RetAColValues("PRG_ALM_DELETE") = "" Then
        Call DebugOut("UTIL", "USE ALM_DELETE")
        Call DebugOut("ERR", "currently it does not work")
        sSqlQuery = "SELECT * FROM [" & sWsName & "$] WHERE [FULL_ADR] " & _
                                "NOT IN (" & RetAColValues("PRG_ALM_DELETE") & ")" & _
                                ""
    Else
        Call DebugOut("UTIL", "NOT USE ALM_DELETE")
        sSqlQuery = "SELECT * FROM [" & sWsName & "$]"
    End If
    
    
        sSqlQuery = "SELECT * FROM [" & sWsName & "$]"
            
    sWsName = "DIFF_ALARM"
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
 
End Sub


Function RetAColValues(inptSht As String) As String
    Call DebugOut("UTIL", "RetAColValues  " & inptSht)
    Dim sWsName As String: sWsName = inptSht
    Dim rRng As Range
    
    Set rRng = ThisWorkbook.Sheets(sWsName).Range("A1:A" & Cells(Rows.Count, 1).End(xlUp).Row)
    RetAColValues = Range2String(rRng, "'", ",")
End Function


Sub test()
Dim sSqlQuery As String
Dim sWbPath As String
Dim sWbName As String
Dim sWsName As String
Dim sWbDBPath As String
Dim sCsvWbPath As String
Dim sCsvWsName As String

sCsvWbPath = "C:\Users\Owner\Documents\workspace\PRJ\DFR\server_data\TREND01\DB\RAW\SMR_RAW_1_20211020.csv"
sCsvWsName = fReplace(Dir(sCsvWbPath), ".csv", "")
'sWbDBPath = " 'C:\Users\Owner\Documents\workspace\DFR3_DB_211004.xlsm' 'Excel 12.0 Xml;HDR=YES' "

'Out Setting
sWsName = "SQL_OUT"
sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name

Dim sTable1 As String
Dim sHeader1 As String

sHeader1 = "[DATETIME]" & _
                    ",[AI_Q#FQI_P302115#PV]" & _
                    ",[AI_Q#FQI_P303175#PV]" & _
                    ""
Dim sStartDate As String: sStartDate = "2021/10/20 05:30:00"
Dim sEndDate As String: sEndDate = "2021/10/20 05:40:00"

sSqlQuery = _
        RetQuerySelectFrom(sHeader1, "[" & sCsvWsName & "$]", sCsvWbPath) & _
        "WHERE [DATETIME] BETWEEN #" & _
        Format(sStartDate, "MM/dd/yy hh:mm:ss") & _
        "# AND #" & _
        Format(sEndDate, "MM/dd/yy hh:mm:ss") & "#"

    'Run the query with the SQL string
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)
    
End Sub

Sub ★BKM_SAMPLES(): End Sub

Sub sample_count()
Call GetQueryResultsOnSht("SELECT COUNT([FP_TYPE]) FROM [PRE_FP_TABLE$]" _
                                            , ThisWorkbook.path & "\" & ThisWorkbook.Name _
                                            , "SQL_OUT")
'=>286
End Sub


Sub sample_distinct()
Call GetQueryResultsOnSht("SELECT DISTINCT [FP_TYPE] FROM [PRE_FP_TABLE$]" _
                                            , ThisWorkbook.path & "\" & ThisWorkbook.Name _
                                            , "SQL_OUT")
'=> unique fp_type names
'AI_SV,,,
Call GetQueryResultsOnSht("SELECT COUNT(*) AS DistinctCountries  FROM (SELECT DISTINCT [FP_TYPE] FROM [PRE_FP_TABLE$])" _
                                            , ThisWorkbook.path & "\" & ThisWorkbook.Name _
                                            , "SQL_OUT")
'=> num of unique fp_type
'7
End Sub

Sub sample_parentasis()
    Dim sSqlQuery As String
    Dim sWbPath As String
    Dim sWbName As String
    Dim sWsName As String
    Dim sWbDBPath As String
    
    'sWbDBPath = " 'C:\Users\Owner\Documents\workspace\DFR3_DB_211004.xlsm' 'Excel 12.0 Xml;HDR=YES' "
    
    'Out Setting
    sWsName = "SQL_OUT"
    sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
    Call SelectOrAddWs(sWsName, ThisWorkbook.Name)
    
    Dim sTable1 As String
    Dim sHeader1 As String: sHeader1 = "[DEVICE],[COMMENT],[CATEGORY],[FULL_ADR]"
    Dim sWhere1 As String: sWhere1 = "WHERE CATEGORY LIKE '%VB%' "
    
    'OK
    sTable1 = _
            RetQuerySelectFrom(sHeader1 & ",'PLC03_R'", "[DB_PLC03_R$]") & sWhere1 & _
    sTable1 = "SELECT * FROM (" & sTable1 & " ) "

    
    'OK
    sTable1 = _
            RetQuerySelectFrom(sHeader1 & ",'PLC03_R'", "[DB_PLC03_R$]") & sWhere1 & _
        "UNION ALL " & _
            RetQuerySelectFrom(sHeader1 & ",'PLC03_M'", "[DB_PLC03_M$]") & sWhere1 & _
        "UNION ALL " & _
            RetQuerySelectFrom(sHeader1 & ",'PLC00_R'", "[DB_PLC00_R$]") & sWhere1 & _
        "UNION ALL " & _
            RetQuerySelectFrom(sHeader1 & ",'PLC00_M'", "[DB_PLC00_M$]") & sWhere1 & _
            " "
    sTable1 = "SELECT * FROM (" & sTable1 & " ) WHERE [CATEGORY] = 'VB' "

    
    sSqlQuery = sTable1
    
    'Run the query with the SQL string
    Call GetQueryResults(sSqlQuery, sWbName, sWsName)

End Sub


Sub sample_replace()
   Dim sSqlQuery As String
    Dim sWbName As String
    Dim sWsName As String
    Dim sWbDBPath As String
    
    'Out Setting
    sWsName = "SQL_OUT"
    sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
    Call SelectOrAddWs(sWsName, ThisWorkbook.Name)
    
    sSqlQuery = _
            RetQuerySelectFrom("*, REPLACE([DEVICE], 'M', 'M00')", "[DB_PLC03_M$]") & _
        ""

    'Run the query with the SQL string
    Call GetQueryResults(sSqlQuery, sWbName, sWsName)

End Sub


Sub sample_innerjoin()
   Dim sSqlQuery As String
    Dim sWbName As String
    Dim sWsName As String
    Dim sWbDBPath As String
    
    'sWbDBPath = " 'C:\Users\Owner\Documents\workspace\DFR3_DB_211004.xlsm' 'Excel 12.0 Xml;HDR=YES' "
    
    'Out Setting
    sWsName = "SQL_OUT"
    sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
    Call SelectOrAddWs(sWsName, ThisWorkbook.Name)
    
    '
    sSqlQuery = _
        "SELECT " & _
        " MST.[FULL_ADR] " & _
        ",MST.[COMMENT] " & _
        ",LST.[FULL_ADR] " & _
        ",LST.[COMMENT] " & _
        "FROM [TST1$]  AS MST " & _
        "RIGHT OUTER JOIN [TST2$] AS LST ON MST.[FULL_ADR] = LST.[FULL_ADR] " & _
        "WHERE LST.[CATEGORY] LIKE '%ALM%' AND LST.[COMMENT] IS NOT NULL " & _
        ""
            
    'OK
    sSqlQuery = _
            RetQuerySelectFrom("*", "[DB_PLC03_R$] AS T1 " & _
            "LEFT OUTER JOIN [DB_PLC03_R$] AS T3 ON T1.[DEVICE] = T3.[DEVICE] ") & _
            "UNION ALL " & _
            RetQuerySelectFrom("*", "[DB_PLC03_M$] AS T2 " & _
            "LEFT OUTER JOIN [DB_PLC03_M$] AS T4 ON T2.[DEVICE] = T4.[DEVICE] ") & _
            ""
            
    '! NG each table must have same column count
    'sSQLQuery = _
            RetQuerySelectFrom("*", "[DB_PLC03_R$] AS T1 " & _
            "LEFT OUTER JOIN [DB_PLC03_R$] AS T3 ON T1.[DEVICE] = T3.[DEVICE] ") & _
            "UNION " & _
            RetQuerySelectFrom("*", "[DB_PLC03_M$]") & _
            ""

       'sSQLQuery = _
            "SELECT " & _
                "  'PLC03.M.' & REPLACE([DEVICE],  'M',  'M00' ) AS [FULL_ADR]  " & _
                ", T1.[COMMENT]" & _
                ", T1.[CATEGORY]" & _
                ", MST.[COMMENT]" & _
            "FROM [DB_PLC03_M$] AS T1 " & _
            "LEFT OUTER JOIN [DB_ALM_MASTER$] AS MST ON T1.[FULL_ADR] = MST.[FULL_ADR] " & _
            "WHERE T1.[COMMENT] IS NOT NULL AND T1.[CATEGORY] LIKE '%ALM%' " & _
            "UNION ALL " & _
            "SELECT " & _
                "  'PLC03.M.' & REPLACE([DEVICE],  'M',  'M00' ) AS [FULL_ADR]  " & _
                ", T1.[COMMENT]" & _
                ", T1.[CATEGORY]" & _
                ", MST.[COMMENT]" & _
            "FROM [DB_PLC03_M$] AS T1 " & _
            "RIGHT OUTER JOIN [DB_ALM_MASTER$] AS MST ON T1.[FULL_ADR] = MST.[FULL_ADR] " & _
            "WHERE T1.[COMMENT] IS NOT NULL AND T1.[CATEGORY] LIKE '%ALM%' " & _
            ""
            
            

    'Run the query with the SQL string
    Call GetQueryResults(sSqlQuery, sWbName, sWsName)

End Sub


Function sample_external() As String
    
Dim sShtName As String: sShtName = [DB$]
Dim sWbDBPath As String
Dim sQUERY As String
sWbDBPath = " 'C:\Users\Owner\Documents\workspace\DFR3_DB_211004.xlsm' 'Excel 12.0 Xml;HDR=YES' "

sQUERY = _
    RetQuerySelectFrom("[HH_DEVICE] AS [DEVICE] ,[COMMENT] & '_HH' AS [COMMENT], 'ALM_HH', '" & sPlc & ".R." & "' & [HH_DEVICE], '" & sShtName & "'", sShtName, sWbDBPath) & _
    "WHERE [COMMENT] IS NOT NULL "
    RetQueryAlarmDev = sQUERY
        
End Function



Sub sample_union()

Dim sSqlQuery As String
Dim sWbPath As String
Dim sWbName As String
Dim sWsName As String
Dim sWbDBPath As String

'sWbDBPath = " 'C:\Users\Owner\Documents\workspace\DFR3_DB_211004.xlsm' 'Excel 12.0 Xml;HDR=YES' "

'Out Setting
sWsName = "SQL_OUT"
sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
Call SelectOrAddWs(sWsName, ThisWorkbook.Name)

Dim sTable1 As String
Dim sHeader1 As String: sHeader1 = "[DEVICE],[COMMENT],[CATEGORY],[FULL_ADR]"
Dim sWhere1 As String: sWhere1 = "WHERE CATEGORY LIKE '%ALM%' "

sTable1 = _
        RetQuerySelectFrom(sHeader1 & ",'PLC03_R'", "[DB_PLC03_R$]") & sWhere1 & _
    "UNION ALL " & _
        RetQuerySelectFrom(sHeader1 & ",'PLC03_M'", "[DB_PLC03_M$]") & sWhere1 & _
    "UNION ALL " & _
        RetQuerySelectFrom(sHeader1 & ",'PLC00_R'", "[DB_PLC00_R$]") & sWhere1 & _
    "UNION ALL " & _
        RetQuerySelectFrom(sHeader1 & ",'PLC00_M'", "[DB_PLC00_M$]") & sWhere1 & _
    " "
    sSqlQuery = sTable1


    'sHeader1 = "[FULL_ADR],[COMMENT]"
    
    'sample - 2
    'sTable1 = _
            RetQuerySelectFrom(sHeader1 & ",'PLC03_R' AS UNIT", "[DB_PLC03_R$]") & _
        "UNION ALL " & _
            RetQuerySelectFrom(sHeader1 & ",'PLC03_M'", "[DB_PLC03_M$]") & _
        "UNION ALL " & _
            RetQuerySelectFrom(sHeader1 & ",'PLC00_R'", "[DB_PLC00_R$]") & _
        "UNION ALL " & _
            RetQuerySelectFrom(sHeader1 & ",'PLC00_M'", "[DB_PLC00_M$]") & _
            " "
    'sSQLQuery = "SELECT * FROM ( " & sTable1 & ") WHERE [FULL_ADR] IS NOT NULL"


    'Run the query with the SQL string
    Call GetQueryResults(sSqlQuery, sWbName, sWsName)
    

'Run the query with the SQL string
Call GetQueryResults(sSqlQuery, sWbName, sWsName)

End Sub


Sub ★BKM_UTILS(): End Sub

Sub fjoinTable(inptLeft As String, inptLeftSel As String, inptRight As String, inptRightSel As String, inptKey As String, Optional inptOutSht As String)
Dim sWbName As String: sWbName = ThisWorkbook.path & "\" & ThisWorkbook.Name
Dim sWsName As String: sWsName = inptSht
Dim sSqlQuery As String
Dim sLeft As String: sLeft = inptLeft
Dim sRight As String: sRight = inptRight
Dim vLeftSel As Variant: vLeftSel = Split(inptLeftSel, ",")
Dim vRightSel As Variant: vRightSel = Split(inptRightSel, ",")
Dim sLeftSel As String
Dim sRightSel As String
Dim v As Variant
Dim sKey As String: sKey = inptKey
sLeft = "[" & sLeft & "$]"
sRight = "[" & sRight & "$]"
sLeftSel = """"
sRightSel = """"
sWbName = ThisWorkbook.Name

If inptOutSht = "" Then
    sWsName = "TMP_SQL_OUT"
Else
    sWsName = inptOutSht
End If

For Each v In vLeftSel
    sLeftSel = sLeftSel & "L.[" & CStr(v) & "],"
Next v
    sLeftSel = Left(sLeftSel, Len(sLeftSel) - 1)

For Each v In vRightSel
    sRightSel = sRightSel & "R.[" & CStr(v) & "],"
Next v
    sRightSel = Left(sRightSel, Len(sRightSel) - 1)
    
    sSqlQuery = sLeftSel & sRightSel
    
    sSqlQuery = _
        RetQuerySelectFrom("""" & sSqlQuery & """", sLeft & " AS L") & _
        "LEFT OUTER JOIN " & sRight & " AS R ON  L.[" & sKey & "] = R.[" & sKey & "]" & _
        ""
    Call GetQueryResultsOnSht(sSqlQuery, sWbName, sWsName)

End Sub


Sub GetQueryResultsOnSht(sSqlQuery As String, sWbName As String, sWsName As String)
    Dim s As String: s = Dir(sWbName): If s = "" Then Call DebugOut("ERR", "check inptWorkbookName is FullPath")
    Call DebugOut("GET_QUERY", sWsName)
    Call SelectOrAddWs(sWsName, Dir(sWbName))
    Call GetQueryResults(sSqlQuery, sWbName, sWsName)
End Sub


Function RetQuerySelectFrom(inptSels As String, inptSht As String, Optional inptwbpath As String = "")
Call DebugOut("RET_QUERY_SELECT", "RetQuerySelectFrom")
Dim sResult As String
Dim aSels As Variant: aSels = Split(inptSels, ",")
Dim sSht As String: sSht = inptSht
Dim sWbDBPath As String: sWbDBPath = inptwbpath
Dim v As Variant
Dim vSels As String

For Each v In aSels
    vSels = vSels & v & ", "
Next v

vSels = Left(vSels, Len(vSels) - 2)

sResult = _
" SELECT " & _
         vSels & " " & _
" FROM " & _
        sSht & " "

If sWbDBPath <> "" Then sResult = sResult & "IN '" & sWbDBPath & "'" & " " & "'Excel 12.0 Xml;HDR=YES'"

RetQuerySelectFrom = sResult

End Function


''MEMO===============================================
''Call QueryExcel(sql, path, SHT)
''path = ThisWorkbook.path & "\" & ThisWorkbook.Name
''SHT = "SQL_OUT"
'
''sql = "SELECT * FROM [tst2$] WHERE COL1 = 'AAA'"
''sql = "SELECT * FROM [tst2$] WHERE [COL1] >= 'C' ORDER BY [COL1] DESC" 'ASC/DESC
''sql = "SELECT * FROM [tst2$] WHERE [COL1] BETWEEN 'C' AND 'E' ORDER BY [COL1] DESC"
''SQL = "SELECT * FROM [tst2$] WHERE [COL1] NOT IN ('CCC', 'EEE') ORDER BY [COL1] DESC"
''SQL = "SELECT * FROM [tst2$] WHERE [COL1] NOT LIKE 'C%' ORDER BY [COL1] DESC"
'
''path = ThisWorkbook.path & "\" & ThisWorkbook.Name: _
''SHT = "SQL_OUT": _
''SQL1 = "SELECT * ": _
''SQL2 = "FROM [tst2$] ": _
''SQL3 = "WHERE [COL1] NOT LIKE 'C%' ": _
''SQL4 = "ORDER BY [COL1] ASC": _
''sql = SQL1 & SQL2 & SQL3 & SQL4: _
''Call QueryExcel(sql, path, SHT)
'
''SELECT first_name & " " & last_name as [new_column]
''FROM [au-500$]
'
''SELECT
''S1.COL1,
''S1.COL1 & " " & S1.COL2 as [NEW_COL]
''FROM [SAMPLE1$] as S1
''WHERE S1.COL1 = "1-ROW9-1"
'
''COL A, B ONLY
''SELECT *
''FROM [SAMPLE1$A1:B12] as S1
'
''Row 2 ~
''SELECT *
''FROM [SAMPLE1$A2:B12] as S1
'
''UNION => NEED SAME TABLE COLUMN FIELD,
''SELECT *
''FROM [SAMPLE1$]
''Union ALL
''SELECT *
''FROM [SAMPLE2$]
'
''SELECT DISTINCT *
''FROM [SAMPLE1$]
'
''INSERT INTO [SAMPLE1$] (COL1, COL2)
''VALUES("NEW_COL1","NEW_COL2")
'
''SELECT *
''FROM [SAMPLE1$] as S1
''WHERE S1.COL5 Is Not Null
'
''SELECT  *
''FROM [SAMPLE1$] AS S1
''WHERE Not S1.COL1 = "FUNC"
'
''UPDATEW [SHEET$]
''SET COLUMN = "NEW_ VAL"
''WHERE TARGET_COL = "TARGET_VAL"
'
''SELECT
''CLUMN
''FROM [SHEET$] as TABLE
''WHERE TABLE.CLUMN Is Not Null
'
''SELECT RIGHT AS ExtractString
''FROM [SHEET$]
'
''SELECT T1.CODE AS [T1_CODE], T1.PVMAX AS [T1_PVMAX], T1.PV_TRENDMAX AS [T1_TREND]
''FROM [DB_FP_AL4$] AS T1
''WHERE T1.PVMAX <> T1.PV_TRENDMAX
'
''SELECT T1.Code
''FROM [DB_FP_AL4$] as T1
''ORDER BY T1.CODE DESC
'
'



