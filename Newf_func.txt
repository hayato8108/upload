
'Enum
Enum eNewfField
    eNewf_plc
    eNewf_Fol
    eNewf_Alias
    eNewf_tagName
    eNewf_Comment
    eNewf_Device
    eNewf_Address
    eNewf_DType
    eNewf_Size
    eNewf_EHi
    eNewf_ELo
    eNewf_TFormat
    eNewf_Unit
    eNewf_Min
    eNewf_Max
    eNewf_Dec
    eNewf_MemType
End Enum

''worksheet
'Public Const gcWsSvrCnf = "svrConfig"
'Public Const gcWsCrrSvrData = "svrCrr"
'Public Const gcWsKeyList = "KeyList"
'Public Const gcWsTrdData = "Trd_All"
'Public Const gcWsAlmData = "Alm_All"
'Public Const gcWsSqlTag = "Sql_Tag"
'Public Const gcWsFpData = "Fp_All"
'
'Public Const gcColTrdIndex = "A" 'fully index
'Public Const gcColTrdGroup = "B"
''public Const gcColTrdCh = "C"
'Public Const gcColTrdDesc = "D"
'Public Const gcColTrdPlc = "E" 'searchKey , Val or Empty
'Public Const gcColTrdMin = "F"
'Public Const gcColTrdMax = "G"
'Public Const gcColTrdUnit = "H"
'Public Const gcColTrdColor = "I"
'
'Public Const gcColAlmIndex = "A" 'fully index <========== to A?
'Public Const gcColAlmAlias = "B"
'Public Const gcColAlmDesc = "C"


Function GetNewfCol(inptPrj As String, inptField As eFixField) As String
Dim sCol As String
Dim sPrj As String

'eFapField
Select Case inptField
    Case eNewf_plc
        sCol = "A"
    Case eNewf_Fol
        sCol = "B"
    Case eNewf_Alias
        sCol = "C"
    Case eNewf_tagName
        sCol = "D"
    Case eNewf_Comment
        sCol = "E"
    Case eNewf_Device
        sCol = "F"
    Case eNewf_Address
        sCol = "G"
    Case eNewf_DType
        sCol = "H"
    Case eNewf_Size
        sCol = "I"
    Case eNewf_EHi
        sCol = "J"
    Case eNewf_ELo
        sCol = "K"
    Case eNewf_Dec
        sCol = "L"
    Case eNewf_TFormat
        sCol = "M"
    Case eNewf_Unit
        sCol = "N"
    Case eNewf_Min
        sCol = "O"
    Case eNewf_Max
        sCol = "P"
    Case eNewf_Dec
        sCol = "Q"
    Case eNewf_MemType
        sCol = "R"
        
End Select

GetNewfCol = sCol

End Function


Function CnvNewfAlias(inptPrj As String, inptType As eNewfField, inptAlias As String, Optional inptOvrCol As String = "") As String

Dim sPrj As String: sPrj = inptPrj
Dim sAlias As String: sAlias = CStr(inptAlias)
Dim sCol As String: sCol = GetNewfCol(inptPrj, inptType)
Dim sMatchRow As String
Dim sRslt As String
Dim sWbName As String: sWbName = GetPrjProps(sPrj, "ewb")
Dim sWsname As String: sWsname = GetPrjProps(sPrj, "ews")
On Error Resume Next

Dim sKeyCol As String: sKeyCol = GetNewfCol(inptPrj, eNewf_Alias)
If Not inptOvrCol = "" Then sKeyCol = inptOvrCol 'column over write A~
Dim rColAlias As Range: Set rColAlias = Workbooks(sWbName).Worksheets(sWsname).Columns(Columns(sKeyCol).Column)

sMatchRow = Application.WorksheetFunction.Match(sAlias, rColAlias, 0)

If sMatchRow <> "" Then
        sRslt = Workbooks(sWbName).Worksheets(sWsname).Cells(CLng(sMatchRow), sCol).Value
    Else
        sRslt = ""
        'Stop
End If

CnvNewfAlias = sRslt

End Function

'Wrapper

Function GetNewfPlc(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfPlc = CnvNewfAlias(inptPrj, eNewf_plc, inptAlias)
End Function

Function GetNewfFol(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfFol = CnvNewfAlias(inptPrj, eNewf_Fol, inptAlias)
End Function

Function GetNewfAlias(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfAlias = CnvNewfAlias(inptPrj, eNewf_Alias, inptAlias)
End Function
    
Function GetNewfTagName(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfTagName = CnvNewfAlias(inptPrj, eNewf_tagName, inptAlias)
End Function
    
Function GetNewfComment(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfComment = CnvNewfAlias(inptPrj, eNewf_Comment, inptAlias)
End Function
    
Function GetNewfDevice(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfDevice = CnvNewfAlias(inptPrj, eNewf_Device, inptAlias)
End Function
    
Function GetNewfAddress(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfAddress = CnvNewfAlias(inptPrj, eNewf_Address, inptAlias)
End Function

Function GetNewfDType(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfDType = CnvNewfAlias(inptPrj, eNewf_DType, inptAlias)
End Function

Function GetNewfSize(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfSize = CnvNewfAlias(inptPrj, eNewf_Size, inptAlias)
End Function

Function GetNewfEHi(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfEHi = CnvNewfAlias(inptPrj, eNewf_EHi, inptAlias)
End Function

Function GetNewfELo(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfELo = CnvNewfAlias(inptPrj, eNewf_ELo, inptAlias)
End Function

Function GetNewfDec(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfDec = CnvNewfAlias(inptPrj, eNewf_Dec, inptAlias)
End Function

Function GetNewfTFormat(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfTFormat = CnvNewfAlias(inptPrj, eNewf_TFormat, inptAlias)
End Function

Function GetNewfUnit(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfUnit = CnvNewfAlias(inptPrj, eNewf_Unit, inptAlias)
End Function

Function GetNewfMin(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfMin = CnvNewfAlias(inptPrj, eNewf_Min, inptAlias)
End Function
    
Function GetNewfMax(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfMax = CnvNewfAlias(inptPrj, eNewf_Max, inptAlias)
End Function

Function GetNewfMemType(inptPrj As String, ByVal inptAlias As String) As String
    GetNewfMemType = CnvNewfAlias(inptPrj, eNewf_MemType, inptAlias)
End Function
