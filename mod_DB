Option Explicit
'DB 20211018


'CONVERT XML 2 DB==========================================================

'[ CLIENT DB SETTING ],,,,
'PGPRM_DB_CLIENT_ROOT , DFR3_DB_211014.xlsm, LinkData, B, C
'*,[ KEY ],[ VAL ],,
'*,//Download xml setting,,,
'*,PGPRM_PATH_LOAD_XML,REPLACE_XMLPATH,,
'*,PGPRM_PATH_SAVE_XML,REPLACE_XMLPATH,,
'*,,,,
'*,,,,
'*,PGPRM_XML_LOAD_FOLDER,_Graphic,,
'*,,,,
'*,PGPRM_XML_OUT_SHT,CLT_XML_OUT,,
'*,,,,
'*,PGPRM_CLIENT_ITEMS,p_r_value,p_r_Pump,,
'*,,,,
'*,PGPRM_EXPAND_CHILD,FALSE,,
'
'*,PGPRM_SHEET_PREF,CLT_,,
',,,,
',,,,
',,,,
',,,,
'[ PARTS DATA ],[ ATTRIBUTES ],[ LIBRALYCLASS ],,
'CLT_p_r_valve,Form,Folder,Top,Left,Height,Width,_TagIn,p_r_valve,,
'CLT_p_r_pump,Form,Folder,Top,Left,Height,Width,_TagIn,p_r_pump,,
'CLT_p_r_pvsv,Form,Folder,Top,Left,Height,Width,_TagInPV,_TagOutPV,_TagInSV,_TagOutSV,_Decimal,p_r_pvsv,,


Sub uploadNumberingXml()
Application.ScreenUpdating = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim sRet As String
Dim ws As Worksheet
On Error Resume Next

With ThisWorkbook.ActiveSheet
    .Activate
    C.uploadNumberingXml (ActiveSheet.Name)
End With

Set C = Nothing
Application.ScreenUpdating = True
End Sub


Sub downloadFolderXml()

Application.ScreenUpdating = False
Dim d As clsXapDebug: Set d = New clsXapDebug
Dim f As IXMLDOMSelection
Dim sFol As String: sFol = ""
Dim sCid As String
Dim l As Long
Dim sRet As String
Dim sOutWsName As String
sOutWsName = fKey2Val("PGPRM_DB_CLIENT_ROOT", "PGPRM_XML_OUT_SHT")
On Error Resume Next

If sOutWsName = "" Then
   Call DebugOut("ERR", "empty pgprm_xml_out_sht")
Else
    Call SelectOrAddWs(sOutWsName, ThisWorkbook.Name)
    Set ws = Sheets(sOutWsName)
End If
    ws.Activate

sFol = fKey2Val("PGPRM_DB_CLIENT_ROOT", "PGPRM_XML_LOAD_FOLDER")
d.reloadPath
Set f = d.getFolder(sFol)

If f.Length = 0 Then MsgBox "Folder Load Error : " & sFol: Exit Sub
Stop
Call d.downloadFolderXml(f)

Call DebugOut("REM", "alter fgetpgval")
'If fGetPgVal("xml_nrw_Form") = "" And fGetPgVal("xml_nrw_LibName") = "" Then Exit Sub
'
'If fGetPgVal("xml_nrw_Enabled") = 1 Then
'    If fGetPgVal("xml_nrw_Form") <> "#N/A#" And fGetPgVal("xml_nrw_Form") <> "" And d.searchActiveSheetHeaderCol("LibraryComment") <> 0 Then
'        Call d.delUnMatchForm(d.searchActiveSheetHeaderCol("form"), fGetPgVal("xml_nrw_Form"))
'    End If
'    If fGetPgVal("xml_nrw_LibName") <> "#N/A#" And fGetPgVal("xml_nrw_LibName") <> "" And d.searchActiveSheetHeaderCol("form") <> 0 Then
'
'       Call d.delUnMatchRow(d.searchActiveSheetHeaderCol("LibraryComment"), fGetPgVal("xml_nrw_LibName"))
'    End If
'End If

Set d = Nothing
Set f = Nothing
Set fr = Nothing

Application.ScreenUpdating = True
End Sub


Sub downloadFixReport()
Application.ScreenUpdating = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim sRet As String

On Error Resume Next

If fGetPgVal("fix_repo_OutSht") = "" Then
    Set ws = ActiveSheet
Else
    Set ws = Sheets(fGetPgVal("fix_repo_OutSht"))
    If ws.Name <> fGetPgVal("fix_repo_OutSht") Then MsgBox "does not exist  : " & fGetPgVal("fix_repo_OutSht"): Exit Sub
End If

With ws
    .Activate
    .Cells.Clear
    .Range(Cells(1, 1), Cells(1, Columns("S").Column)).Value2 = Split("_Index,Object,Top,Left,Width,Height,LibraryComment,_Text,_TagIn,_TagInColor,_TagInVisible,_OpenPic,_Run,_Mes1,_Mes2,_Img,_Hi,_Lo,_Del", ",")
    C.reloadPath
    C.downloadFixReport
End With

Set C = Nothing
Application.ScreenUpdating = True
End Sub


Sub uploadFixReport()
Application.ScreenUpdating = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim sRet As String
Dim ws As Worksheet
On Error Resume Next

If fGetPgVal("fix_repo_OutSht") = "" Then
    Set ws = ActiveSheet
Else
    Set ws = Sheets(fGetPgVal("fix_repo_OutSht"))
    If ws.Name <> fGetPgVal("fix_repo_OutSht") Then MsgBox "does not exist  : " & fGetPgVal("fix_repo_OutSht"): Exit Sub
End If

With ws
    .Activate
    C.reloadPath
    C.uploadFixFilterXml
End With

MsgBox "uploaFixReport :" & fGetPgVal("fix_repo_OutPath")

Set C = Nothing
Application.ScreenUpdating = True
End Sub

Sub uploadFixReportB()
Application.ScreenUpdating = False
Application.DisplayAlerts = False
'If Not ActiveSheet.Tab.ColorIndex = -4142 Then Stop
Dim C As clsXapDebug: Set C = New clsXapDebug
Dim vFiles As FileDialog: Set vFiles = Application.FileDialog(msoFileDialogFilePicker)
Dim vSelectFiles As FileDialogSelectedItems
Dim vCnt As Long
Dim sRet As String
Dim wb As Workbook

With vFiles
    .Filters.Clear
'    .Filters.Add "pictureFile", "*.*", 1
    '.Title = "FILE SELECT"
    .AllowMultiSelect = True
    .InitialFileName = fGetPgVal("fix_repo_dir")
    .Show
End With

On Error Resume Next
If vFiles.SelectedItems.Count = 0 Then Exit Sub: Exit Sub
Set wb = Workbooks.Add: wb.Activate

For vCnt = 1 To vFiles.SelectedItems.Count ' 1 base array
    With wb.Worksheets.Add
        .Range(Cells(1, 1), Cells(1, Columns("S").Column)).Value2 = Split("_Index,Object,Top,Left,Width,Height,LibraryComment,_Text,_TagIn,_TagInColor,_TagInVisible,_OpenPic,_Run,_Mes1,_Mes2,_Img,_Hi,_Lo,_Del", ",")
        sRet = fSetPgVal("fix_repo_InPath", vFiles.SelectedItems(vCnt))
        sRet = fSetPgVal("fix_repo_OutPath", fReplace(vFiles.SelectedItems(vCnt), ".ODR", ".xml"))
        C.reloadPath
        C.downloadFixReport
        .Name = fSplit(Dir(vFiles.SelectedItems(vCnt)), 1, ".")
        C.uploadFixFilterXml
    End With
Next vCnt
wb.Sheets("Sheet1").Delete

Set C = Nothing
Application.ScreenUpdating = True
Application.DisplayAlerts = True
End Sub
        
Sub downloadPartsXmlOnSht()

Dim d As clsXapDebug
Set d = New clsXapDebug
d.downloadPartsXmlOnSht

End Sub

'CONVERT EXCEL 2 DB==========================================================

Sub Excel2DbShtRefreshActiveSht()
'For KeyBind
If Not ActiveSheet.Tab.ColorIndex = -4142 And Not ActiveSheet.Tab.ColorIndex = 49 Then Debug.Print "MSG:: Locked": Exit Sub
 'assume that workbook open
Call Excel2DbShtRefresh(ThisWorkbook.Name, ActiveSheet.Name)

End Sub

Function RetCDirTmpPath(inptPath As String) As String
Dim sPath As String: sPath = inptPath
Dim sTmpPath As String
    
    sTmpPath = fReplace(ThisWorkbook.path & "\DB_TmpFile\" & Dir(sPath), ".txt", ".csv")
    RetCDirTmpPath = sTmpPath
    
End Function

Function RetCDirWbPath() As String
Dim sTmpPath As String
    
    sTmpPath = ThisWorkbook.path & "\" & ThisWorkbook.Name
    RetCDirWbPath = sTmpPath
    
End Function


Sub ADD_FACEPLATE_MASTER()

Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
   Debug.Print "FACEPLATE START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FACEPLATE_MASTER")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_FACEPLATE_MASTER"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:B1").Value2 = Array("GROUP_NAME", "STRUCT_TAG_ADR")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With
End With
    Workbooks(Dir(sWb)).Close False
    
End Sub

Sub ADD_FACEPLATE_CSV()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
   Debug.Print "FACEPLATE START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_AI ")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    sWs = "DB_FP_AI "
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AB1").Value = "PV_MAX"
            .Range("AE1").Value = "PV_MIN"
            .Range("AH1").Value = "TREND_MAX"
            .Range("AK1").Value = "TREND_MIN"
            .Range("AT1").Value = "UNITS"
            .Range("AW1").Value = "DECIMAL"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
    
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_AI_AL4")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    sWs = "DB_FP_AI_AL4"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AB1").Value = "PV_MAX"
            .Range("AE1").Value = "PV_MIN"
            .Range("AH1").Value = "TREND_MAX"
            .Range("AK1").Value = "TREND_MIN"
            .Range("AT1").Value = "UNITS"
            .Range("AW1").Value = "DECIMAL"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
    
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_AI_Q")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    sWs = "DB_FP_AI_Q"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AB1").Value = "PV_MAX"
            .Range("AE1").Value = "PV_MIN"
            .Range("AH1").Value = "TREND_MAX"
            .Range("AK1").Value = "TREND_MIN"
            .Range("AT1").Value = "UNITS"
            .Range("AW1").Value = "DECIMAL"
            .Range("CN1").Value = "RESET"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
       
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_AI_SV ")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    sWs = "DB_FP_AI_SV "
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AE1").Value = "PV_MAX"
            .Range("AH1").Value = "PV_MIN"
            .Range("AK1").Value = "SV_MAX"
            .Range("AN1").Value = "SV_MIN"
            .Range("AQ1").Value = "TREND_MAX"
            .Range("AT1").Value = "TREND_MIN"
            .Range("BC1").Value = "UNITS"
            .Range("BF1").Value = "DECIMAL"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
           
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_AI_SV2")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    sWs = "DB_FP_AI_SV2"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AE1").Value = "PV_MAX"
            .Range("AH1").Value = "PV_MIN"
            .Range("AK1").Value = "SV_MAX"
            .Range("AN1").Value = "SV_MIN"
            .Range("AQ1").Value = "TREND_MAX"
            .Range("AT1").Value = "TREND_MIN"
            .Range("BC1").Value = "UNITS"
            .Range("BF1").Value = "DECIMAL"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
           
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_AI_SV3")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    sWs = "DB_FP_AI_SV3"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AE1").Value = "PV_MAX"
            .Range("AH1").Value = "PV_MIN"
            .Range("AQ1").Value = "TREND_MAX"
            .Range("AT1").Value = "TREND_MIN"
            
Call DebugOut("REM", ">>>does not match , check csv3 header")
            .Range("BC1").Value = "UNITS"
            .Range("BF1").Value = "DECIMAL"
            .Range("CZ1").Value = "SV_MAX"
            .Range("DA1").Value = "SV_MIN"
        
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
            
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_PID")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    
    sWs = "DB_FP_PID"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AH1").Value = "PV_MAX"
            .Range("AK1").Value = "PV_MIN"
            .Range("AT1").Value = "TREND_MAX"
            .Range("AW1").Value = "TREND_MIN"
            .Range("BL1").Value = "UNITS"
            .Range("BO1").Value = "DECIMAL"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
                
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_PR_B")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_FP_PR_B"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
            .Range("A1").Value = "STRUCT_TAG_DR"
            .Range("B1").Value = "FP_TYPE"
            .Range("G1").Value = "ALIAS_BASE"
            .Range("J1").Value = "COMMENT1"
            .Range("M1").Value = "COMMENT2"
            .Range("AE1").Value = "PV_MAX"
            .Range("AH1").Value = "PV_MIN"
            .Range("AK1").Value = "TREND_MAX"
            .Range("AN1").Value = "TREND_MIN"
            .Range("AW1").Value = "UNITS"
            .Range("AZ1").Value = "DECIMAL"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
    
'    NOT USE
'    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_PVI_D")
'    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_SI")
'    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FP_SW_A")

End With
End Sub


Sub ADD_FIELDMASTER_TAG()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
   Debug.Print "FIELDMASTER_TAG START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FIELDMASTER_TAG ")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    
    sWs = "DB_FIELDMASTER_TAG "
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:K1").Value2 = Array("TREND_NAME", "ALIAS", "COMMENT", "_", "_", "DECIMAL", "_", "_", "_", "_", "ALIAS_BASE", "_", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
    
    
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FIELDMASTER_TAG_PV")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    
    sWs = "DB_FIELDMASTER_TAG_PV"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:K1").Value2 = Array("TREND_NAME", "ALIAS", "COMMENT", "_", "_", "DECIMAL", "_", "_", "_", "_", "ALIAS_BASE", "_", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
    
    
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FIELDMASTER_TAG_SV")
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    
    sWs = "DB_FIELDMASTER_TAG_SV"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)

        .Range("A1:K1").Value2 = Array("TREND_NAME", "ALIAS", "COMMENT", "_", "_", "DECIMAL", "_", "_", "_", "_", "ALIAS_BASE", "_", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
        
    
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_FIELDMASTER_TAG_PRT")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)
    
    sWs = "DB_FIELDMASTER_TAG_PRT"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:K1").Value2 = Array("TREND_NAME", "ALIAS", "COMMENT", "_", "_", "DECIMAL", "_", "_", "_", "_", "ALIAS_BASE", "_", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
    
End With
End Sub


Sub ADD_ALIAS()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
   Debug.Print "ALIST START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_ALIAS")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_ALIAS"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:B1").Value2 = Array("ALIAS", "FULL_ADR")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False
End With
End Sub



Sub ADD_C()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "C : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_C ")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_C "
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1").Value = "GROUP"
        .Range("B1").Value = "ALIAS_BASE"
        .Range("C1").Value = "COMMENT"
        .Range("D1").Value = "MIN"
        .Range("E1").Value = "MAX"
        .Range("F1").Value = "UNIT"
        .Range("G1").Value = "_"
        .Range("H1").Value = "FP_TYPE"
        .Range("I1").Value = "WORD_SIZE"
        Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With
    Workbooks(Dir(sWb)).Close False
End With

End Sub



Sub ADD_OP()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "PLC00 OP START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_OP")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_OP00_X"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:E1").Value2 = Array("DEVICE", "_", "COMMENT1", "COMMENT2", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 2), .Cells(Rows.Count, 2).End(xlUp))
        Call FixFormula(rRng.Offset(0, 3), "=IF(OR(RC2=""X080"", RC2=""X088"",RC2=""X089"",RC2=""X08A"", RC2=""X08B"", RC2=""X08C"", RC2=""X08D"", RC2=""X095"", RC2=""X096"", RC2=""X097"", RC2=""X098"", RC2=""X099"", RC2=""X09A"", RC2=""X09B"", RC2=""X09C"" ),""ALM"","""")")
    End With

    sWs = "DB_OP00_Y"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:E1").Value2 = Array("DEVICE", "_", "COMMENT1", "COMMENT2", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With
    Workbooks(Dir(sWb)).Close False
End With

End Sub


Sub ADD_KONDO()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = thiswrokbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "PLC03 KONDO START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_KONDO")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_KONDO_K2A_B"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:L1").Value2 = Array("Index", "_", "_", "_", "CATEGORY", "_", "COMMENT", "Device", "_", "_", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With

    sWs = "DB_KONDO_A2K_B"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:G1").Value2 = Array("Index", "_", "_", "COMMENT", "Device", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With

    sWs = "DB_KONDO_K2A_W"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:I1").Value2 = Array("Index", "_", "_", "COMMENT", "Device", "_", "_", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With

    '?? 1C701
    sWs = "DB_KONDO_A2K_W"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:J1").Value2 = Array("Index", "???", "_", "COMMENT", "Device", "_", "Min", "Max", "Unit", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With
    Workbooks(Dir(sWb)).Close False

End With
End Sub


Sub ADD_IO()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "PLC00 PLC03 IO START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_IO")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_PLC00_X"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:E1").Value2 = Array("DEVICE", "COMMENT1", "COMMENT2", "COMMENT3", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
        Call FixFormula(rRng.Offset(0, 4), "=IF(OR(NOT(fSplit(RC3,1,""異常"")=RC3),NOT(fSplit(RC4,1,""異常"")=RC4)),""ALM"","""")") 'CATEGORY
   End With

    sWs = "DB_PLC00_Y"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:D1").Value2 = Array("DEVICE", "COMMENT1", "COMMENT2", "COMMENT3")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
         Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
   End With


    sWs = "DB_PLC03_X"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:E1").Value2 = Array("DEVICE", "COMMENT1", "COMMENT2", "COMMENT3", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
        Call FixFormula(rRng.Offset(0, 4), "=IF(OR(NOT(fSplit(RC3,1,""異常"")=RC3),NOT(fSplit(RC4,1,""異常"")=RC4)),""ALM"","""")") 'CATEGORY
   End With
   
    sWs = "DB_PLC03_Y"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:D1").Value2 = Array("DEVICE", "COMMENT1", "COMMENT2", "COMMENT3")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
    End With
    Workbooks(Dir(sWb)).Close False

End With
End Sub

Sub ADD_TYOUGOU()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "PLC03 TYOUGOU START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_TYOUGOU")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_TYOUGOU_R"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:O1").Value2 = Array("_", "_", "_", "_", "_", "ALIAS", "_", "_", "_", "_", "COMMENT", "_", "_", "_", "DEVICE")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 6), .Cells(Rows.Count, 6).End(xlUp))
   End With
   Workbooks(Dir(sWb)).Close False

End With
End Sub


Sub ADD_HIRANO()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "PLC03 HIRANO START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_HIRANO")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_HIRANO_DI_B"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:F1").Value2 = Array("INDEX", "_", "_", "COMMENT", "DEVICE", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With

    sWs = "DB_HIRANO_ALM_W"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:G1").Value2 = Array("INDEX", "_", "_", "COMMENT", "_", "_", "DEVICE")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
        Call FixFormula(rRng.Offset(0, 6), "=RetXAPBitDevFormat(RC5,TRUE)") 'TREND_NAME
   End With

    sWs = "DB_HIRANO_DO_B"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:F1").Value2 = Array("INDEX", "_", "_", "COMMENT", "DEVICE", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With

    sWs = "DB_HIRANO_PV_W"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:J1").Value2 = Array("INDEX", "_", "_", "COMMENT", "DEVICE", "MIN", "MAX", "UNITS", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With

    sWs = "DB_HIRANO_SV_W"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:J1").Value2 = Array("INDEX", "_", "_", "COMMENT", "DEVICE", "MIN", "MAX", "UNITS", "_", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
   End With
    Workbooks(Dir(sWb)).Close False

End With
End Sub


Sub ADD_ANALOG()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "PLC 00 PLC03 WARITUKE START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_WARITUKE")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

  'PLC00 PLC03 ANALOG
    sWs = "DB_PLC00_ANALOG"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
    'PLC_DEV => COMMENT ONLY
    'ALIAS => x PLC HL DEV ,  o SCADA HL DEV
    Call DebugOut("MUST", ">>>>>>> LinSht Update >>>>>>  A1:AT ")
        .Range("A1:AT1").Value2 = Array("NO", "ALIAS_BASE", "COMMENT", "PV_MIN", "PV_MAX", "SV_MIN", "SV_MAX", "UNITS", "FP_TYPE", "WORD_SIZE", _
                                                                "PV_DEVICE", "SV_DEVICE", "MV_DEVICE", _
                                                                "SH_DEVICE", "SL_DEVICE", "", "MV1_DEVICE", "MV2_DEVICE", "DB_DEVICE", _
                                                                "MH_DEVICE", "ML_DEVICE", _
                                                                "HH_DEVICE", "H_DEVICE", "L_DEVICE", "LL_DEVICE", "HYS_DEVICE", "CAL_DEVICE", "CAL_M_DEVICE", "RAW_DEVICE", "P_DEVICE", "I_DEVICE", "D_DEVICE", "MODE_DEVICE", "", _
                                                                "PLC_HH_DEVICE", "PLC_H_DEVICE", "PLC_L_DEVICE", "PLC_LL_DEVICE", "PLC_CAL_M_DEVICE", _
                                                                "AL_HH_DEVICE", "AL_H_DEVICE", "AL_L_DEVICE", "AL_LL_DEVICE", "AL_CAL_M_DEVICE", "", _
                                                                "DECIMAL")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
        Call FixFormula(rRng.Offset(0, 45), "=IF(NOT(fLenOfDecimal(RC4)=fLenOfDecimal(RC5)),""NG"",fLenOfDecimal(SUBSTITUTE(RC5,""-"","""")))") 'DECIMAL
   End With

    sWs = "DB_PLC03_ANALOG"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
                .Range("A1:AT1").Value2 = Array("NO", "ALIAS_BASE", "COMMENT", "PV_MIN", "PV_MAX", "SV_MIN", "SV_MAX", "UNITS", "FP_TYPE", "WORD_SIZE", _
                                                                "PV_DEVICE", "SV_DEVICE", "MV_DEVICE", _
                                                                "SH_DEVICE", "SL_DEVICE", "", "MV1_DEVICE", "MV2_DEVICE", "DB_DEVICE", _
                                                                "MH_DEVICE", "ML_DEVICE", _
                                                                "HH_DEVICE", "H_DEVICE", "L_DEVICE", "LL_DEVICE", "HYS_DEVICE", "CAL_DEVICE", "CAL_M_DEVICE", "RAW_DEVICE", "P_DEVICE", "I_DEVICE", "D_DEVICE", "MODE_DEVICE", "", _
                                                                "PLC_HH_DEVICE", "PLC_H_DEVICE", "PLC_L_DEVICE", "PLC_LL_DEVICE", "PLC_CAL_M_DEVICE", _
                                                                "AL_HH_DEVICE", "AL_H_DEVICE", "AL_L_DEVICE", "AL_LL_DEVICE", "AL_CAL_M_DEVICE", "", _
                                                                "DECIMAL")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
        Call FixFormula(rRng.Offset(0, 45), "=IF(fLenOfDecimal(RC4)<>fLenOfDecimal(RC5),""NG"",fLenOfDecimal(SUBSTITUTE(RC5,""-"","""")))") 'DECIMAL
   End With
End With

    Workbooks(Dir(sWb)).Close False
    
End Sub


Sub ADD_WARITUKE()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "PLC 00 PLC03 WARITUKE START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_WARITUKE")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    'PLC00
        sWs = "DB_PLC00_M"
        Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:C1").Value2 = Array("DEVICE", "COMMENT", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
   End With


        sWs = "DB_PLC00_R"
        Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:C1").Value2 = Array("DEVICE", "COMMENT", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
   End With


    'PLC03
        sWs = "DB_PLC03_M"
        Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:C1").Value2 = Array("DEVICE", "COMMENT", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
   End With

        sWs = "DB_PLC03_R"
        Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:C1").Value2 = Array("DEVICE", "COMMENT", "CATEGORY")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
   End With


    'CC LINK
        sWs = "DB_CCL03_B"
        Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:C1").Value2 = Array("DEVICE", "COMMENT", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
   End With
   
   
        sWs = "DB_CCL03_W"
        Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:C1").Value2 = Array("DEVICE", "COMMENT", "_")
        Call Excel2DbShtRefresh(oWb.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
    End With
    Workbooks(Dir(sWb)).Close False

End With

End Sub


Sub ADD_SERVER_CSV()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
 Debug.Print "SERVER START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_SERVER")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_SERVER_CSV"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Cells.NumberFormatLocal = "@"
        .Range("A1:N1").Value2 = Array( _
                                                                "CSV1", "CSV2", "CSV3", _
                                                                "PLC", "FOLDER", "NAME", "FULL_ADR", "UNITS", "COMMENT", "DEC1", "DEC2", "DEC3", "DECIMAL", "BINALY" _
                                                                )
        Call Excel2DbShtRefresh(oWb.Name, sWs) 'buffer sht
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))

        Debug.Print "   CSV1  START : " & Now()
        Call FixFormula(rRng.Offset(0, 3), "=IF(RC1=""*"",R[-1]C,fSplit(RC1,1,""#""))") 'CSV1

        Debug.Print "   CSV2  START : " & Now()
        Call FixFormula(rRng.Offset(0, 4), "=IF(RC2=""*"",R[-1]C,fSplit(RC2,1,""#""))") 'CSV2

        Debug.Print "   CSV3  START : " & Now()
        Call FixFormula(rRng.Offset(0, 5), "=IF(RC3=""*"",R[-1]C,fSplit(RC3,1,""#""))") 'CSV3

        Debug.Print "   FULL_ADR  START : " & Now()
        Call FixFormula(rRng.Offset(0, 6), "=RC4 & ""."" & RC5 & ""."" & RC6") 'FULL_ADR

        Debug.Print "   UNITS  START : " & Now()
        Call FixFormula(rRng.Offset(0, 7), "=fSplitBetween(RC3,2,""+EU="",""+C="",TRUE)") 'UNITS

        Debug.Print "   COMMENT  START : " & Now()
        Call FixFormula(rRng.Offset(0, 8), "=fSplit(RC3,2,""+C="",TRUE)") 'COMMENT

        Debug.Print "   DEC1  START : " & Now()
        Call FixFormula(rRng.Offset(0, 9), "=fSplitCsvPrmDec(RC3,1)") 'DEC1

        Debug.Print "   DEC2  START : " & Now()
        Call FixFormula(rRng.Offset(0, 10), "=fSplitCsvPrmDec(RC3,2)") 'DEC2

        Debug.Print "   DEC3  START : " & Now()
        Call FixFormula(rRng.Offset(0, 11), "=fSplitCsvPrmDec(RC3,3)") 'DEC3
        
        Debug.Print "   DECIMAL START : " & Now()
        Call FixFormula(rRng.Offset(0, 12), "=IF(NOT(SUBSTITUTE(RC10,""-"","""")=SUBSTITUTE(RC11,""-"","""")),""NG"",SUBSTITUTE(RC10,""-"",""""))") 'DECIMAL
  
        Debug.Print "   BIN  START : " & Now()
        Call FixFormula(rRng.Offset(0, 13), "=fSplitCsvPrmBin(RC3)") 'BIN
        End With
    Workbooks(Dir(sWb)).Close False
End With
End Sub



Sub ADD_TREND_PENINFO()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim sTmpPath As String
Dim rRng As Range

With oWb
    Debug.Print "TREND_PENINFO START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_TREND_PENINFO ")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_TREND_PENINFO "
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:P1").Value2 = Array( _
                                                "TREND_COMMENT", "UNITS", "_", "_", "_", "MIN", "MAX", "_", "_", "DATA_SOURCE", "DECIMAL", "SIZE", _
                                                "TREND_NAME", "FP_TYPE", "ALIAS", "COMMENT")
        Call Excel2DbShtRefresh(ThisWorkbook.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))

        Debug.Print "   COL SPLIT  START : " & Now()
        Call FixFormula(rRng.Offset(0, 12), "=SUBSTITUTE(fSplit(RC10,2,""::""),fSplit(fSplit(RC10,2,""::""),1,""."") &""."","""")") 'TREND_NAME
        Call FixFormula(rRng.Offset(0, 13), "=fSplitBetween(RC10,2,""::"",""."")") 'FP_TYPE
        Call FixFormula(rRng.Offset(0, 14), "=IF(NOT(LEFT(RC1,1)=""[""),fSplit(RC1,1,"" ""),"""")") 'CMT_ALIAS
        Call FixFormula(rRng.Offset(0, 15), "=IF(NOT(LEFT(RC1,1)=""[""),TRIM(SUBSTITUTE(RC1,fSplit(RC1,1,"" ""),"""")),"""")") 'CMT_DESC
        .Move before:=oWb.Sheets(oWb.Sheets.Count)
   End With
    Workbooks(Dir(sWb)).Close False

  Debug.Print "TREND_PENINFO_ONEPOINT START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_TREND_PENINFO_ONEPOINT")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_TREND_PENINFO_ONEPOINT"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:F1").Value2 = Array("SRC", "_", "_", "TREND_NAME", "FP_TYPE", "ALIAS")

        Call Excel2DbShtRefresh(ThisWorkbook.Name, sWs)
        Set rRng = .Range(.Cells(2, 1), .Cells(Rows.Count, 1).End(xlUp))
        
        Debug.Print "   COL SPLIT  START : " & Now()
        Call FixFormula(rRng.Offset(0, 3), "=SUBSTITUTE(fSplit(RC1,2,""::""),fSplit(fSplit(RC1,2,""::""),1,""."") &""."","""")") 'TREND_NAME
        Call FixFormula(rRng.Offset(0, 4), "=fSplitBetween(RC1,2,""::"",""."")") 'FP_TYPE
        Call FixFormula(rRng.Offset(0, 5), "=fSplit(RC4,1,""."")") 'FP_TYPE
        .Move before:=oWb.Sheets(oWb.Sheets.Count)
   End With
    Workbooks(Dir(sWb)).Close False

End With

End Sub

    
Sub ADD_ALM_MASTER()
Dim sWb As String
Dim sWs As String
Dim oWb As Workbook: Set oWb = ThisWorkbook
Dim oWbTmp As Workbook
Dim rRng As Range

With oWb
    Debug.Print "ALM_MASTER START : " & Now() ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    sWb = fKey2Val("PGPRM_DB_PATH_ROOT", "PGPRM_DB_PATH_ALARM_MASTER")
    Call CloseWb(Dir(sWb))
    FileCopy sWb, RetCDirTmpPath(sWb)
    sWb = RetCDirTmpPath(sWb)
    OpenFileAsWb (sWb)

    sWs = "DB_ALM_MASTER"
    Call SelectOrAddWs(sWs, ThisWorkbook.Name)
    With .Worksheets(sWs)
        .Range("A1:L1").Value2 = Array("ALARMID", "_", "_", "FULL_ADR", "COMMENT", "_", "_", "_", "ALIAS", "_", "CATEGORY", "_")

    Call Excel2DbShtRefresh(oWb.Name, sWs)
    End With
    Workbooks(Dir(sWb)).Close False

End With

End Sub

    
    
Sub JoinLogCsv(inptSelect As String)
Application.DisplayAlerts = False
Application.ScreenUpdating = False

Dim oWbDst As Workbook: Set oWbDst = ThisWorkbook
Dim sTargetPath As String
Dim swsNameBase As String
Dim sWsName As String
Dim sSelect As String: sSelect = "[" & fReplace(inptSelect, ",", "],[") & "]"
Dim vCsvFiles As FileDialog: Set vCsvFiles = Application.FileDialog(msoFileDialogFilePicker)
Dim vSelected As FileDialogSelectedItems
Dim lFrmRSt As Long: lFrmRSt = 1
Dim lFrmREnd As Long
Dim lFrmCEnd As Long
Dim lDstRSt As Long: lDstRSt = 2
Dim lDstREnd As Long
Dim lCnt As Long

With vCsvFiles
    .Filters.Clear
    .Filters.Add "csvFile", "*.csv", 1
    '.Title = "FILE SELECT"
    .AllowMultiSelect = True
    .InitialFileName = "C:\Users\Owner\Documents\workspace\PRJ\DFR\server_data\log\alarmlog"
    .Show
End With

On Error Resume Next
     
If vCsvFiles.SelectedItems.Count = 0 Then Exit Sub

swsNameBase = "TMP_JOIN_LOG_CSV"
sWsName = swsNameBase & "1"
Call SelectOrAddWs(sWsName, ThisWorkbook.Name)
'thisworkbook.Sheets(sWsName).Cells.Clear

With ThisWorkbook.Sheets(sWsName)
    For lCnt = 1 To vCsvFiles.SelectedItems.Count
        sTargetPath = vCsvFiles.SelectedItems(lCnt)
        Call CloseWb(Dir(sTargetPath))
        OpenFileAsWb (sTargetPath)
                       
        lFrmREnd = Workbooks(Dir(sTargetPath)) _
                            .Sheets(fReplace(Dir(sTargetPath), ".csv", "")) _
                            .Cells(Rows.Count, 1).End(xlUp).Row
                            
        lFrmCEnd = Workbooks(Dir(sTargetPath)) _
                            .Sheets(fReplace(Dir(sTargetPath), ".csv", "")) _
                            .Cells(1, Columns.Count).End(xlToLeft).Column
                   
        Workbooks(Dir(sTargetPath)) _
                            .Sheets(fReplace(Dir(sTargetPath), ".csv", "")) _
                            .Range(Cells(lFrmRSt, 1), Cells(lFrmREnd, lFrmCEnd)).Select
        Selection.Copy
       
        lDstREnd = oWbDst.Sheets(sWsName).Cells(Rows.Count, 1).End(xlUp).Row + 1
        If lDstREnd < lDstRSt Then lDstREnd = lDstRSt

        If lDstREnd + lFrmREnd > Rows.Count Then
            sWsName = swsNameBase & CInt(fReplace(sWsName, swsNameBase, "")) + 1
            Call SelectOrAddWs(sWsName, ThisWorkbook.Name)
            lDstREnd = lDstRSt
        End If
        
        oWbDst.Sheets(sWsName).Cells(lDstREnd, 1).PasteSpecial
        
        Workbooks(Dir(sTargetPath)).Close False
    Next lCnt
End With

Application.DisplayAlerts = True
Application.ScreenUpdating = True
End Sub


Function fSplitCsvPrmDec(inptStr As String, inptRetCol As Long) As String

Dim lCol As Long: lCol = inptRetCol
Dim sStr As String: sStr = inptStr
Dim sDec As String: sDec = fSplit(sStr, 2, "DEC:")
Dim sResult As String

If sDec = sStr Then
    sResult = ""
Else
    Select Case lCol
        Case 1
            sResult = fSplit(sDec, 1, "|")
        Case 2
            sResult = fSplit(sDec, 2, "|")
        Case 3
            sResult = fSplit(fSplit(sDec, 3, "|"), 1, "+")
        Case Else
            Stop
    End Select
End If

fSplitCsvPrmDec = sResult

End Function


Function RetXAPBitDevFormat(inptDev As String, inptZero As Boolean, Optional inptDelimiter As String = ".") As String
Dim sDev As String: sDev = inptDev
Dim sDlmt As String: sDlmt = inptDelimiter
Dim sDevL As String
Dim sDevR As String
Dim bZero As Boolean: bZero = inptZero
Dim sResult As String

sDevL = fSplit(sDev, 1, sDlmt)
sDevR = fSplit(sDev, 2, sDlmt)

Select Case sDevR
    Case "A"
        sDevR = 10
    Case "B"
        sDevR = 11
    Case "C"
        sDevR = 12
    Case "D"
        sDevR = 13
    Case "E"
        sDevR = 14
    Case "F"
        sDevR = 15
    Case Else

End Select

If sDevR = "0" And bZero = False Then
    sResult = sDevL
Else
    sResult = sDevL & "@" & sDevR
End If

RetXAPBitDevFormat = sResult

End Function


Function fSplitCsvPrmBin(inptStr As String) As String

Dim sStr As String: sStr = inptStr
Dim sResult As String

If fSplit(sStr, 2, "FLT") <> sStr Then
    sResult = "FLT"
ElseIf fSplit(sStr, 2, "BIN") <> sStr Then
    sResult = "BIN" & fSplitBetween(sStr, 2, "BIN", "+")
Else
    sResult = ""
End If

fSplitCsvPrmBin = sResult

End Function


'Sub BatchExcel2DbShtRefresh()
'Dim sTabColor As Integer: sTabColor = 49 ' # 123456
'Dim ws As Worksheet
'For Each ws In ThisWorkbook.Worksheets
'    If ws.Tab.ColorIndex = sTabColor Then
'        ws.Activate
'        Excel2DbShtRefresh
'    End If
'Next ws
'End Sub


Sub Excel2DbShtRefresh(inptWb As String, inptWs As String) ' DstWb, DstWs
Application.ScreenUpdating = False

Dim wbSRC As Workbook
Dim wbDst As Workbook: Set wbDst = Workbooks(inptWb)
Dim wsDst As Worksheet: Set wsDst = wbDst.Worksheets(inptWs)
Dim sData As Variant
Dim l As Long
Dim lEnd As Long
Dim sPrf As String: sPrf = inptWs 'DB_PLC00_M

Dim sWbLD As String: sWbLD = ThisWorkbook.Name
Dim sWsLD As String: sWsLD = "LinkData"
Dim sWb As String
Dim sWs As String
Dim sStCell As String
Dim sEndCell As String
Dim lEndDst As Integer
                
wsDst.Rows("2:" & Rows.Count).Clear
wsDst.Rows("2:" & Rows.Count).NumberFormat = "@"

With Workbooks(sWbLD).Sheets(sWsLD)
lEnd = .Cells(.Rows.Count, 1).End(xlUp).Row
    For l = 1 To lEnd
        'search link key
        If Not .Cells(l, 1).Value = "" And Left(.Cells(l, 1).Value, Len(sPrf)) = sPrf Then ' DB_XXX_XX
            
            'append range
            sData = fGetRowData(sWbLD, sWsLD, .Cells(l, 1).Value, "A")  'row => [link parameter]
            If UBound(sData) = -1 Then Debug.Print "does not match": Exit Sub
                sWb = RetCDirTmpPath(CStr(sData(2)))
                sWs = CStr(sData(3))
                sStCell = CStr(sData(4))
                sEndCell = CStr(sData(5))
                    
                Set wbSRC = Workbooks(Dir(sWb))
                lEndDst = wsDst.Cells(Rows.Count, 1).End(xlUp).Row + 1
                wbSRC.Sheets(sWs).Range(sStCell & ":" & sEndCell).Copy
                wsDst.Activate
                wsDst.Cells(lEndDst, 1).Select
                wsDst.PasteSpecial
                wbSRC.Sheets(sWs).Range("A1").Copy
        End If
    Next l
End With

wsDst.Range("A1").Activate
Application.ScreenUpdating = True
End Sub


Sub ChangeShtVisible(inptBool As Boolean, inptShts As String)
Dim s As Worksheet
Dim sName As String
Dim v As Variant
Dim vShts As Variant: vShts = Split(inptShts, ",")
Dim vBool As Boolean: vBool = inptBool

For Each v In vShts
    sName = v
    For Each s In ThisWorkbook.Worksheets
        If Left(s.Name, Len(sName)) = sName Then s.Visible = vBool
    Next s
Next v

End Sub


Sub SortSht(inptShts As String)
Dim s As Worksheet
Dim sName As String
Dim v As Variant
Dim vShts As Variant: vShts = Split(inptShts, ",")

For Each v In vShts
    sName = v
    For Each s In ThisWorkbook.Worksheets
        If Left(s.Name, Len(sName)) = sName Then s.Move before:=Sheets(1)
    Next s
Next v

End Sub



