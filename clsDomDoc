'211102 xapDomDoc

Private base_ As DOMDocument60
Private Path_ As String
Private InPath_ As String
Private OutPath_ As String
Private FixRepoInPath_ As String
Private FixRepoOutPath_ As String
Private crrFolder_ As String
Private crrForm_ As String

Function loadXml()
    loadClientFile (InPath_)
End Function

Function reloadPath()
'    InPath_ = fGetPgVal("xml_in_path")
'    OutPath_ = fGetPgVal("xml_out_path")
    InPath_ = fKey2Val("PGPRM_DB_CLIENT_ROOT", "PGPRM_PATH_LOAD_XML", "LinkShtClt")
    OutPath_ = fKey2Val("PGPRM_DB_CLIENT_ROOT", "PGPRM_PATH_SAVE_XML", "LinkShtClt")
'    FixRepoInPath_ = fKey2Val("PGPRM_DB_CLIENT_ROOT", "PGPRM_PATH_LOAD_XML")
'    FixRepoOutPath_ = fKey2Val("PGPRM_DB_CLIENT_ROOT", "PGPRM_PATH_SAVE_XML")

    Call DebugOut("XML_PROC", _
                        "sub reloadpath " & vbNewLine & _
                        "Inpath " & InPath_ & vbNewLine & _
                        "Outpath " & OutPath_)
    loadXml
End Function


Function loadClientFile(inpt As String)
Dim vDoc As DOMDocument60: Set vDoc = New DOMDocument60

With vDoc
    .async = False
    .validateonparse = False
'   .preserveWhiteSpace = True
    If Not .Load(inpt) Then Call DebugOut("ERR", "xml path load error : " & inpt) ' load error
End With

Set base_ = vDoc

End Function


Function createNewXapDoc() As DOMDocument60
Dim vDoc As DOMDocument60: Set vDoc = New DOMDocument60
 
With vDoc
    .async = False
    .validateonparse = False
'   .preservewhitespace = True
    .loadXml ("<?xml version=""1.0"" encoding=""UTF-8""?><ROOT><FORMROOT clid=""Client"" Name=""Client"" Product=""PA-Panel"" Ver=""6.0"" Rev=""12.1"" FileRev=""3"" FileSaveWithoutDefault=""T""></FORMROOT></ROOT>")

End With

Set createNewXapDoc = vDoc
Set vDoc = Nothing

End Function


Function getFolder(inptName As String) As IXMLDOMSelection 'as Alias
Dim vRslt As IXMLDOMSelection
Set vRslt = selectNodesEX("//FORMROOT/OBJ[@clid='Folder'][@Name='" & inptName & "']")
Set getFolder = vRslt
Set vRslt = Nothing
End Function


Function createFolderElm(Optional inptValue As String = "Folder01") As IXMLDOMElement
'<OBJ clid="Folder" Name="Folder01"></OBJ>

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")
Dim sValue As String: sValue = inptValue

Set vElm = setAttributesEx(vElm, "clid", "Folder")
Set vElm = setAttributesEx(vElm, "Name", sValue)

Set createFolderElm = vElm

End Function


Function createFormElm(inptH As Long, inptW As Long, Optional inptValue As String = "Form01") As IXMLDOMElement
'<OBJ clid="Form" Name="Form01" Height="600" Width="800" VisualTheme="DEFAULT" LocaleLanguage="DEFAULT"></OBJ>

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")
Dim sValue As String: sValue = inptValue
Dim sH As String: sH = CStr(inptH)
Dim sW As String: sW = CStr(inptW)

Set vElm = setAttributesEx(vElm, "clid", "Form")
Set vElm = setAttributesEx(vElm, "Name", sValue)

Set vElm = setAttributesEx(vElm, "Height", sH)
Set vElm = setAttributesEx(vElm, "Width", sW)

Set vElm = setAttributesEx(vElm, "VisualTheme", "DEFAULT")
Set vElm = setAttributesEx(vElm, "LocaleLanguage", "DEFAULT")

Set createFormElm = vElm

End Function


Function createGroupElm(inptT As Long, inptL As Long, inptH As Long, inptW As Long) As IXMLDOMElement
'<OBJ clid="Group" Top="50" Left="70" Height="280" Width="120">

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")
Dim sT As String: sT = CStr(inptT)
Dim sL As String: sL = CStr(inptL)
Dim sH As String: sH = CStr(inptH)
Dim sW As String: sW = CStr(inptW)

Set vElm = setAttributesEx(vElm, "clid", "Group")

Set vElm = setAttributesEx(vElm, "Top", sT)
Set vElm = setAttributesEx(vElm, "Left", sL)

Set vElm = setAttributesEx(vElm, "Height", sH)
Set vElm = setAttributesEx(vElm, "Width", sW)

Set createGroupElm = vElm

End Function

Sub appendChildEx(inpt As IXMLDOMElement)
    base_.appendChild inpt
End Sub

Function createElementEx(inptElm As String) As IXMLDOMElement

Dim vDoc As DOMDocument60: Set vDoc = base_
Dim vElm As IXMLDOMElement
Dim sElm As String: sElm = inptElm

Set vElm = vDoc.createElement(sElm)
vElm.Text = "" '=> <sElm></sElm>

Set createElementEx = vElm

End Function


Function setAttributesEx(ByVal inptElm As IXMLDOMElement, inptAttrName As String, inptAttrVal As String) As IXMLDOMElement
'Set d = New DomEx
'Set e = d.createElementEx("OBJ")
'Set e2 = d.setAttributesEx(e, "new", "newVal")

Dim vDoc As DOMDocument60: Set vDoc = base_
Dim vElm As IXMLDOMElement: Set vElm = inptElm
Dim sAttrName As String: sAttrName = inptAttrName
Dim sAttrVal As String: sAttrVal = inptAttrVal
Dim vAtr As IXMLDOMAttribute: Set vAtr = vDoc.createAttribute(sAttrName)

vElm.Attributes.setNamedItem(vAtr).Text = sAttrVal

Set setAttributesEx = vElm

End Function


Function getAttributesEx(ByVal inptElm As IXMLDOMElement, inptAttr As String) As String
'Set d = New clsXapDomDoc
'Set e = d.createElementEx("OBJ")
'Set e = d.setAttributesEx(e, "new", "val")
'Print d.getAttributesEx(e, "new")

If inptAttr = "" Then
    getAttributesEx = ""
ElseIf Not IsNull(inptElm.getAttribute(inptAttr)) Then
    getAttributesEx = inptElm.getAttribute(inptAttr)
Else
    getAttributesEx = ""
End If

End Function



Function createEllipseElm(inptT As Long, inptL As Long, inptH As Long, inptW As Long) As IXMLDOMElement
'<OBJ clid="Ellipse" RotateX="45" RotateY="45" Top="0" Left="0" Height="90" Width="90" LibraryComment="_Circle">

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")
Dim sRX As String
Dim sRY As String
Dim sT As String: sT = CStr(inptT)
Dim sL As String: sL = CStr(inptL)
Dim sH As String: sH = CStr(inptH)
Dim sW As String: sW = CStr(inptW)

Set vElm = setAttributesEx(vElm, "clid", "Ellipse")

sRX = sL + (sW / 2)
sRY = sT + (sH / 2)

Set vElm = setAttributesEx(vElm, "RotateX", sRX)
Set vElm = setAttributesEx(vElm, "RotateY", sRY)

Set vElm = setAttributesEx(vElm, "Top", sT)
Set vElm = setAttributesEx(vElm, "Left", sL)

Set vElm = setAttributesEx(vElm, "Height", sH)
Set vElm = setAttributesEx(vElm, "Width", sW)

Set vElm = setAttributesEx(vElm, "LibraryComment", "p_Circle")


Set createEllipseElm = vElm

End Function


Function createLineElm(inptY1 As Long, inptX2 As Long, inptY2 As Long, inptT As Long, inptL As Long, inptH As Long, inptW As Long) As IXMLDOMElement
'<OBJ clid="Line" Y1="170" X2="110" Y2="170" Top="170" Left="0" Height="1" Width="110" LibraryComment="_Line">

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")

Dim sY1 As String: sY1 = CStr(inptY1)
Dim sY2 As String: sY2 = CStr(inptY2)
Dim sX2 As String: sX2 = CStr(inptX2)
Dim sT As String: sT = CStr(inptT)
Dim sL As String: sL = CStr(inptL)
Dim sH As String: sH = CStr(inptH)
Dim sW As String: sW = CStr(inptW)

Set vElm = setAttributesEx(vElm, "clid", "Line")

Set vElm = setAttributesEx(vElm, "Y1", sY1)
Set vElm = setAttributesEx(vElm, "X2", sX2)
Set vElm = setAttributesEx(vElm, "Y2", sY2)

Set vElm = setAttributesEx(vElm, "Top", sT)
Set vElm = setAttributesEx(vElm, "Left", sL)

Set vElm = setAttributesEx(vElm, "Height", sH)
Set vElm = setAttributesEx(vElm, "Width", sW)

Set vElm = setAttributesEx(vElm, "LibraryComment", "p_Line")


Set createLineElm = vElm

End Function


Function createLabelElm(inptTxt As String, inptT As Long, inptL As Long, inptH As Long, inptW As Long) As IXMLDOMElement
'<OBJ clid="Label" Text="LabelText" Top="250" Left="0" Height="30" Width="120" LibraryComment="_Label">

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")
Dim sTxt As String: sTxt = inptTxt
Dim sT As String: sT = CStr(inptT)
Dim sL As String: sL = CStr(inptL)
Dim sH As String: sH = CStr(inptH)
Dim sW As String: sW = CStr(inptW)

Set vElm = setAttributesEx(vElm, "clid", "Label")

Set vElm = setAttributesEx(vElm, "Text", sTxt)

Set vElm = setAttributesEx(vElm, "Top", sT)
Set vElm = setAttributesEx(vElm, "Left", sL)

Set vElm = setAttributesEx(vElm, "Height", sH)
Set vElm = setAttributesEx(vElm, "Width", sW)

Set vElm = setAttributesEx(vElm, "LibraryComment", "p_Label")


Set createLabelElm = vElm

End Function


Function createRectElm(inptT As Long, inptL As Long, inptH As Long, inptW As Long) As IXMLDOMElement
'<OBJ clid="Rectangle" RotateX="325" RotateY="190" Top="150" Left="270" Height="80" Width="110">

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")

Dim sRX As String
Dim sRY As String
Dim sT As String: sT = CStr(inptT)
Dim sL As String: sL = CStr(inptL)
Dim sH As String: sH = CStr(inptH)
Dim sW As String: sW = CStr(inptW)

sRX = sL + (sW / 2)
sRY = sT + (sH / 2)

Set vElm = setAttributesEx(vElm, "clid", "Rectangle")

Set vElm = setAttributesEx(vElm, "RotateX", sRX)
Set vElm = setAttributesEx(vElm, "RotateY", sRY)

Set vElm = setAttributesEx(vElm, "Top", sT)
Set vElm = setAttributesEx(vElm, "Left", sL)

Set vElm = setAttributesEx(vElm, "Height", sH)
Set vElm = setAttributesEx(vElm, "Width", sW)

Set vElm = setAttributesEx(vElm, "LibraryComment", "p_Rect")


Set createRectElm = vElm

End Function


Function createRedFilter(inptT As String, inptL As String, inptH As String, inptW As String) As IXMLDOMElement
'<OBJ clid="Rectangle" Border="F" FillColor="#800000" Alpha="0.7" RotateX="630" RotateY="390" Top="290" Left="540" Height="190" Width="180">
Dim vC As IXMLDOMElement: Set vC = createElementEx("OBJ")

Dim sT As Long
Dim sL As Long
Dim sH As Long
Dim sW As Long

sT = CLng(inptT)
sL = CLng(inptL)
sH = CLng(inptH)
sW = CLng(inptW)

Set vC = createRectElm(sT, sL, sH, sW)

Set vC = setAttributesEx(vC, "Border", "F")
Set vC = setAttributesEx(vC, "FillColor", "#800000")
Set vC = setAttributesEx(vC, "Alpha", "0.6")

Set vC = setAttributesEx(vC, "LibraryComment", "p_FilterR")

Set createRedFilter = vC

End Function


Function createPartsElm(inptClid As String, Optional inptValue As String = "Folder01") As IXMLDOMElement


End Function

Function createImgElm(inptT As Long, inptL As Long, inptH As Long, inptW As Long, inptImg As String) As IXMLDOMElement
'"<OBJ clid=""Image"" FileNormal=""C:\Users\Owner\Documents\workspace\FIXREPORT\溶解画面.jpg"" RotateX=""0"" RotateY=""0"" Top=""28"" Left=""0"" Height=""10537"" Width=""13127"">"

Dim vElm As IXMLDOMElement: Set vElm = createElementEx("OBJ")

Dim sT As String: sT = CStr(inptT)
Dim sL As String: sL = CStr(inptL)
Dim sH As String: sH = CStr(inptH)
Dim sW As String: sW = CStr(inptW)
Dim sI As String: sI = CStr(inptImg)

Set vElm = setAttributesEx(vElm, "clid", "Image")
Set vElm = setAttributesEx(vElm, "FileNormal", sI)

Set vElm = setAttributesEx(vElm, "RotateX", 0)
Set vElm = setAttributesEx(vElm, "RotateY", 0)

Set vElm = setAttributesEx(vElm, "Top", sT)
Set vElm = setAttributesEx(vElm, "Left", sL)

Set vElm = setAttributesEx(vElm, "Height", sH)
Set vElm = setAttributesEx(vElm, "Width", sW)

Set vElm = setAttributesEx(vElm, "LibraryComment", "p_Img")


Set createImgElm = vElm

End Function


'Converter ======================================================================================

Function cnvElm2Objs(inptElm As IXMLDOMElement) As IXMLDOMNodeList
'Set vObjs = d.CnvElm2Objs(vFrms, "OBJ")

Dim vElm As IXMLDOMElement: Set vElm = inptElm
Dim vSelection As IXMLDOMNodeList
Set vSelection = vElm.getElementsByTagName("OBJ")

'usage
'vSelection(n).BaseName => OBJ
'vSelection(n).text => ""
'vSelection(0).Attributes.getNamedItem("clid").Text => Folder
'vSelection(0).Attributes(0).XML => " clid = "Folder" " <= attribute's .xml

Set cnvElm2Objs = vSelection

Set vElm = Nothing
Set vSelection = Nothing

End Function


Function selectNodesEX(inpt As String) As IXMLDOMSelection
    Set selectNodesEX = base_.SelectNodes(inpt)
End Function


Private Sub class_initialize()
    Set base_ = New DOMDocument60
End Sub




